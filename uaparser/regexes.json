{
  "UA": [
    {
      "Reg": {},
      "Expr": "(CFNetwork)(?:/(\\d+)\\.(\\d+)\\.?(\\d+)?)?",
      "Flags": "",
      "FamilyReplacement": "CFNetwork",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Pingdom.com_bot_version_)(\\d+)\\.(\\d+)",
      "Flags": "",
      "FamilyReplacement": "PingdomBot",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(facebookexternalhit)/(\\d+)\\.(\\d+)",
      "Flags": "",
      "FamilyReplacement": "FacebookBot",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "Google.*/\\+/web/snippet",
      "Flags": "",
      "FamilyReplacement": "GooglePlusBot",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "via ggpht.com GoogleImageProxy",
      "Flags": "",
      "FamilyReplacement": "GmailImageProxy",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Twitterbot)/(\\d+)\\.(\\d+)",
      "Flags": "",
      "FamilyReplacement": "TwitterBot",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "/((?:Ant-)?Nutch|[A-z]+[Bb]ot|[A-z]+[Ss]pider|Axtaris|fetchurl|Isara|ShopSalad|Tailsweep)[ \\-](\\d+)(?:\\.(\\d+)(?:\\.(\\d+))?)?",
      "Flags": "",
      "FamilyReplacement": "$1",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(008|Altresium|Argus|BaiduMobaider|BoardReader|DNSGroup|DataparkSearch|EDI|Goodzer|Grub|INGRID|Infohelfer|LinkedInBot|LOOQ|Nutch|PathDefender|Peew|PostPost|Steeler|Twitterbot|VSE|WebCrunch|WebZIP|Y!J-BR[A-Z]|YahooSeeker|envolk|sproose|wminer)/(\\d+)(?:\\.(\\d+)(?:\\.(\\d+))?)?",
      "Flags": "",
      "FamilyReplacement": "$1",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(MSIE) (\\d+)\\.(\\d+)([a-z]\\d?)?;.* MSIECrawler",
      "Flags": "",
      "FamilyReplacement": "MSIECrawler",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Google-HTTP-Java-Client|Apache-HttpClient|http%20client|Python-urllib|HttpMonitor|TLSProber|WinHTTP|JNLP)(?:[ /](\\d+)(?:\\.(\\d+)(?:\\.(\\d+))?)?)?",
      "Flags": "",
      "FamilyReplacement": "$1",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(1470\\.net crawler|50\\.nu|8bo Crawler Bot|Aboundex|Accoona-[A-z]+-Agent|AdsBot-Google(?:-[a-z]+)?|altavista|AppEngine-Google|archive.*?\\.org_bot|archiver|Ask Jeeves|[Bb]ai[Dd]u[Ss]pider(?:-[A-Za-z]+)*|bingbot|BingPreview|blitzbot|BlogBridge|BoardReader(?: [A-Za-z]+)*|boitho.com-dc|BotSeer|\\b\\w*favicon\\w*\\b|\\bYeti(?:-[a-z]+)?|Catchpoint bot|[Cc]harlotte|Checklinks|clumboot|Comodo HTTP\\(S\\) Crawler|Comodo-Webinspector-Crawler|ConveraCrawler|CRAWL-E|CrawlConvera|Daumoa(?:-feedfetcher)?|Feed Seeker Bot|findlinks|Flamingo_SearchEngine|FollowSite Bot|furlbot|Genieo|gigabot|GomezAgent|gonzo1|(?:[a-zA-Z]+-)?Googlebot(?:-[a-zA-Z]+)?|Google SketchUp|grub-client|gsa-crawler|heritrix|HiddenMarket|holmes|HooWWWer|htdig|ia_archiver|ICC-Crawler|Icarus6j|ichiro(?:/mobile)?|IconSurf|IlTrovatore(?:-Setaccio)?|InfuzApp|Innovazion Crawler|InternetArchive|IP2[a-z]+Bot|jbot\\b|KaloogaBot|Kraken|Kurzor|larbin|LEIA|LesnikBot|Linguee Bot|LinkAider|LinkedInBot|Lite Bot|Llaut|lycos|Mail\\.RU_Bot|masidani_bot|Mediapartners-Google|Microsoft .*? Bot|mogimogi|mozDex|MJ12bot|msnbot(?:-media *)?|msrbot|netresearch|Netvibes|NewsGator[^/]*|^NING|Nutch[^/]*|Nymesis|ObjectsSearch|Orbiter|OOZBOT|PagePeeker|PagesInventory|PaxleFramework|Peeplo Screenshot Bot|PlantyNet_WebRobot|Pompos|Read%20Later|Reaper|RedCarpet|Retreiver|Riddler|Rival IQ|scooter|Scrapy|Scrubby|searchsight|seekbot|semanticdiscovery|Simpy|SimplePie|SEOstats|SimpleRSS|SiteCon|Slurp|snappy|Speedy Spider|Squrl Java|TheUsefulbot|ThumbShotsBot|Thumbshots\\.ru|TwitterBot|URL2PNG|Vagabondo|VoilaBot|^vortex|Votay bot|^voyager|WASALive.Bot|Web-sniffer|WebThumb|WeSEE:[A-z]+|WhatWeb|WIRE|WordPress|Wotbox|www\\.almaden\\.ibm\\.com|Xenu(?:.s)? Link Sleuth|Xerka [A-z]+Bot|yacy(?:bot)?|Yahoo[a-z]*Seeker|Yahoo! Slurp|Yandex\\w+|YodaoBot(?:-[A-z]+)?|YottaaMonitor|Yowedo|^Zao|^Zao-Crawler|ZeBot_www\\.ze\\.bz|ZooShot|ZyBorg)(?:[ /]v?(\\d+)(?:\\.(\\d+)(?:\\.(\\d+))?)?)?",
      "Flags": "",
      "FamilyReplacement": "$1",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(?:\\/[A-Za-z0-9\\.]+)? *([A-Za-z0-9 \\-_\\!\\[\\]:]*(?:[Aa]rchiver|[Ii]ndexer|[Ss]craper|[Bb]ot|[Ss]pider|[Cc]rawl[a-z]*))/(\\d+)(?:\\.(\\d+)(?:\\.(\\d+))?)?",
      "Flags": "",
      "FamilyReplacement": "$1",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(?:\\/[A-Za-z0-9\\.]+)? *([A-Za-z0-9 _\\!\\[\\]:]*(?:[Aa]rchiver|[Ii]ndexer|[Ss]craper|[Bb]ot|[Ss]pider|[Cc]rawl[a-z]*)) (\\d+)(?:\\.(\\d+)(?:\\.(\\d+))?)?",
      "Flags": "",
      "FamilyReplacement": "$1",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "((?:[A-z0-9]+|[A-z\\-]+ ?)?(?: the )?(?:[Ss][Pp][Ii][Dd][Ee][Rr]|[Ss]crape|[A-Za-z0-9-]*(?:[^C][^Uu])[Bb]ot|[Cc][Rr][Aa][Ww][Ll])[A-z0-9]*)(?:(?:[ /]| v)(\\d+)(?:\\.(\\d+)(?:\\.(\\d+))?)?)?",
      "Flags": "",
      "FamilyReplacement": "$1",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(HbbTV)/(\\d+)\\.(\\d+)\\.(\\d+) \\(",
      "Flags": "",
      "FamilyReplacement": "$1",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Chimera|SeaMonkey|Camino)/(\\d+)\\.(\\d+)\\.?([ab]?\\d+[a-z]*)?",
      "Flags": "",
      "FamilyReplacement": "$1",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "\\[FB.*;(FBAV)/(\\d+)(?:\\.(\\d+)(?:\\.(\\d)+)?)?",
      "Flags": "",
      "FamilyReplacement": "Facebook",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "\\[(Pinterest)/[^\\]]+\\]",
      "Flags": "",
      "FamilyReplacement": "$1",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Pinterest)(?: for Android(?: Tablet)?)?/(\\d+)(?:\\.(\\d+)(?:\\.(\\d)+)?)?",
      "Flags": "",
      "FamilyReplacement": "$1",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Pale[Mm]oon)/(\\d+)\\.(\\d+)\\.?(\\d+)?",
      "Flags": "",
      "FamilyReplacement": "Pale Moon (Firefox Variant)",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Fennec)/(\\d+)\\.(\\d+)\\.?([ab]?\\d+[a-z]*)",
      "Flags": "",
      "FamilyReplacement": "Firefox Mobile",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Fennec)/(\\d+)\\.(\\d+)(pre)",
      "Flags": "",
      "FamilyReplacement": "Firefox Mobile",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Fennec)/(\\d+)\\.(\\d+)",
      "Flags": "",
      "FamilyReplacement": "Firefox Mobile",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(?:Mobile|Tablet);.*(Firefox)/(\\d+)\\.(\\d+)",
      "Flags": "",
      "FamilyReplacement": "Firefox Mobile",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Namoroka|Shiretoko|Minefield)/(\\d+)\\.(\\d+)\\.(\\d+(?:pre)?)",
      "Flags": "",
      "FamilyReplacement": "Firefox ($1)",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Firefox)/(\\d+)\\.(\\d+)(a\\d+[a-z]*)",
      "Flags": "",
      "FamilyReplacement": "Firefox Alpha",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Firefox)/(\\d+)\\.(\\d+)(b\\d+[a-z]*)",
      "Flags": "",
      "FamilyReplacement": "Firefox Beta",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Firefox)-(?:\\d+\\.\\d+)?/(\\d+)\\.(\\d+)(a\\d+[a-z]*)",
      "Flags": "",
      "FamilyReplacement": "Firefox Alpha",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Firefox)-(?:\\d+\\.\\d+)?/(\\d+)\\.(\\d+)(b\\d+[a-z]*)",
      "Flags": "",
      "FamilyReplacement": "Firefox Beta",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Namoroka|Shiretoko|Minefield)/(\\d+)\\.(\\d+)([ab]\\d+[a-z]*)?",
      "Flags": "",
      "FamilyReplacement": "Firefox ($1)",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Firefox).*Tablet browser (\\d+)\\.(\\d+)\\.(\\d+)",
      "Flags": "",
      "FamilyReplacement": "MicroB",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(MozillaDeveloperPreview)/(\\d+)\\.(\\d+)([ab]\\d+[a-z]*)?",
      "Flags": "",
      "FamilyReplacement": "$1",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(FxiOS)/(\\d+)\\.(\\d+)(\\.(\\d+))?(\\.(\\d+))?",
      "Flags": "",
      "FamilyReplacement": "Firefox iOS",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Flock)/(\\d+)\\.(\\d+)(b\\d+?)",
      "Flags": "",
      "FamilyReplacement": "$1",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(RockMelt)/(\\d+)\\.(\\d+)\\.(\\d+)",
      "Flags": "",
      "FamilyReplacement": "$1",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Navigator)/(\\d+)\\.(\\d+)\\.(\\d+)",
      "Flags": "",
      "FamilyReplacement": "Netscape",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Navigator)/(\\d+)\\.(\\d+)([ab]\\d+)",
      "Flags": "",
      "FamilyReplacement": "Netscape",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Netscape6)/(\\d+)\\.(\\d+)\\.?([ab]?\\d+)?",
      "Flags": "",
      "FamilyReplacement": "Netscape",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(MyIBrow)/(\\d+)\\.(\\d+)",
      "Flags": "",
      "FamilyReplacement": "My Internet Browser",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(UC ?Browser|UCWEB|U3)[ /]?(\\d+)\\.(\\d+)\\.(\\d+)",
      "Flags": "",
      "FamilyReplacement": "UC Browser",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Opera Tablet).*Version/(\\d+)\\.(\\d+)(?:\\.(\\d+))?",
      "Flags": "",
      "FamilyReplacement": "$1",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Opera Mini)(?:/att)?/?(\\d+)?(?:\\.(\\d+))?(?:\\.(\\d+))?",
      "Flags": "",
      "FamilyReplacement": "$1",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Opera)/.+Opera Mobi.+Version/(\\d+)\\.(\\d+)",
      "Flags": "",
      "FamilyReplacement": "Opera Mobile",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Opera)/(\\d+)\\.(\\d+).+Opera Mobi",
      "Flags": "",
      "FamilyReplacement": "Opera Mobile",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "Opera Mobi.+(Opera)(?:/|\\s+)(\\d+)\\.(\\d+)",
      "Flags": "",
      "FamilyReplacement": "Opera Mobile",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "Opera Mobi",
      "Flags": "",
      "FamilyReplacement": "Opera Mobile",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Opera)/9.80.*Version/(\\d+)\\.(\\d+)(?:\\.(\\d+))?",
      "Flags": "",
      "FamilyReplacement": "$1",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(?:Mobile Safari).*(OPR)/(\\d+)\\.(\\d+)\\.(\\d+)",
      "Flags": "",
      "FamilyReplacement": "Opera Mobile",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(?:Chrome).*(OPR)/(\\d+)\\.(\\d+)\\.(\\d+)",
      "Flags": "",
      "FamilyReplacement": "Opera",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Coast)/(\\d+).(\\d+).(\\d+)",
      "Flags": "",
      "FamilyReplacement": "Opera Coast",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(OPiOS)/(\\d+).(\\d+).(\\d+)",
      "Flags": "",
      "FamilyReplacement": "Opera Mini",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(hpw|web)OS/(\\d+)\\.(\\d+)(?:\\.(\\d+))?",
      "Flags": "",
      "FamilyReplacement": "webOS Browser",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(luakit)",
      "Flags": "",
      "FamilyReplacement": "LuaKit",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Snowshoe)/(\\d+)\\.(\\d+).(\\d+)",
      "Flags": "",
      "FamilyReplacement": "$1",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Lightning)/(\\d+)\\.(\\d+)\\.?((?:[ab]?\\d+[a-z]*)|(?:\\d*))",
      "Flags": "",
      "FamilyReplacement": "$1",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Firefox)/(\\d+)\\.(\\d+)\\.(\\d+(?:pre)?) \\(Swiftfox\\)",
      "Flags": "",
      "FamilyReplacement": "Swiftfox",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Firefox)/(\\d+)\\.(\\d+)([ab]\\d+[a-z]*)? \\(Swiftfox\\)",
      "Flags": "",
      "FamilyReplacement": "Swiftfox",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(rekonq)/(\\d+)\\.(\\d+)\\.?(\\d+)? Safari",
      "Flags": "",
      "FamilyReplacement": "Rekonq",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "rekonq",
      "Flags": "",
      "FamilyReplacement": "Rekonq",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(conkeror|Conkeror)/(\\d+)\\.(\\d+)\\.?(\\d+)?",
      "Flags": "",
      "FamilyReplacement": "Conkeror",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(konqueror)/(\\d+)\\.(\\d+)\\.(\\d+)",
      "Flags": "",
      "FamilyReplacement": "Konqueror",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(WeTab)-Browser",
      "Flags": "",
      "FamilyReplacement": "$1",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Comodo_Dragon)/(\\d+)\\.(\\d+)\\.(\\d+)",
      "Flags": "",
      "FamilyReplacement": "Comodo Dragon",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Symphony) (\\d+).(\\d+)",
      "Flags": "",
      "FamilyReplacement": "$1",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Minimo)",
      "Flags": "",
      "FamilyReplacement": "$1",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "PLAYSTATION 3.+WebKit",
      "Flags": "",
      "FamilyReplacement": "NetFront NX",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "PLAYSTATION 3",
      "Flags": "",
      "FamilyReplacement": "NetFront",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(PlayStation Portable)",
      "Flags": "",
      "FamilyReplacement": "NetFront",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(PlayStation Vita)",
      "Flags": "",
      "FamilyReplacement": "NetFront NX",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "AppleWebKit.+ (NX)/(\\d+)\\.(\\d+)\\.(\\d+)",
      "Flags": "",
      "FamilyReplacement": "NetFront NX",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Nintendo 3DS)",
      "Flags": "",
      "FamilyReplacement": "NetFront NX",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Silk)/(\\d+)\\.(\\d+)(?:\\.([0-9\\-]+))?",
      "Flags": "",
      "FamilyReplacement": "Amazon Silk",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Puffin)/(\\d+)\\.(\\d+)(?:\\.(\\d+))?",
      "Flags": "",
      "FamilyReplacement": "$1",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "Windows Phone .*(Edge)/(\\d+)\\.(\\d+)",
      "Flags": "",
      "FamilyReplacement": "Edge Mobile",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(SamsungBrowser)/(\\d+)\\.(\\d+)",
      "Flags": "",
      "FamilyReplacement": "Samsung Internet",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(CrMo)/(\\d+)\\.(\\d+)\\.(\\d+)\\.(\\d+)",
      "Flags": "",
      "FamilyReplacement": "Chrome Mobile",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(CriOS)/(\\d+)\\.(\\d+)\\.(\\d+)\\.(\\d+)",
      "Flags": "",
      "FamilyReplacement": "Chrome Mobile iOS",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Chrome)/(\\d+)\\.(\\d+)\\.(\\d+)\\.(\\d+) Mobile(?:[ /]|$)",
      "Flags": "",
      "FamilyReplacement": "Chrome Mobile",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": " Mobile .*(Chrome)/(\\d+)\\.(\\d+)\\.(\\d+)\\.(\\d+)",
      "Flags": "",
      "FamilyReplacement": "Chrome Mobile",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(chromeframe)/(\\d+)\\.(\\d+)\\.(\\d+)",
      "Flags": "",
      "FamilyReplacement": "Chrome Frame",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(SLP Browser)/(\\d+)\\.(\\d+)",
      "Flags": "",
      "FamilyReplacement": "Tizen Browser",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(SE 2\\.X) MetaSr (\\d+)\\.(\\d+)",
      "Flags": "",
      "FamilyReplacement": "Sogou Explorer",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(baidubrowser)[/\\s](\\d+)",
      "Flags": "",
      "FamilyReplacement": "Baidu Browser",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(FlyFlow)/(\\d+)\\.(\\d+)",
      "Flags": "",
      "FamilyReplacement": "Baidu Explorer",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(MQQBrowser/Mini)(?:(\\d+)(?:\\.(\\d+)(?:\\.(\\d+))?)?)?",
      "Flags": "",
      "FamilyReplacement": "QQ Browser Mini",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(MQQBrowser)(?:/(\\d+)(?:\\.(\\d+)(?:\\.(\\d+))?)?)?",
      "Flags": "",
      "FamilyReplacement": "QQ Browser Mobile",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(QQBrowser)(?:/(\\d+)(?:\\.(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?)?",
      "Flags": "",
      "FamilyReplacement": "QQ Browser",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Rackspace Monitoring)/(\\d+)\\.(\\d+)",
      "Flags": "",
      "FamilyReplacement": "RackspaceBot",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(PyAMF)/(\\d+)\\.(\\d+)\\.(\\d+)",
      "Flags": "",
      "FamilyReplacement": "$1",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(YaBrowser)/(\\d+)\\.(\\d+)\\.(\\d+)",
      "Flags": "",
      "FamilyReplacement": "Yandex Browser",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Chrome)/(\\d+)\\.(\\d+)\\.(\\d+).* MRCHROME",
      "Flags": "",
      "FamilyReplacement": "Mail.ru Chromium Browser",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(AOL) (\\d+)\\.(\\d+); AOLBuild (\\d+)",
      "Flags": "",
      "FamilyReplacement": "$1",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "\\b(MobileIron|Crosswalk|AdobeAIR|FireWeb|Jasmine|ANTGalio|Midori|Fresco|Lobo|PaleMoon|Maxthon|Lynx|OmniWeb|Dillo|Camino|Demeter|Fluid|Fennec|Epiphany|Shiira|Sunrise|Spotify|Flock|Netscape|Lunascape|WebPilot|NetFront|Netfront|Konqueror|SeaMonkey|Kazehakase|Vienna|Iceape|Iceweasel|IceWeasel|Iron|K-Meleon|Sleipnir|Galeon|GranParadiso|Opera Mini|iCab|NetNewsWire|ThunderBrowse|Iris|UP\\.Browser|Bunjalloo|Google Earth|Raven for Mac|Openwave)/(\\d+)\\.(\\d+)\\.(\\d+)",
      "Flags": "",
      "FamilyReplacement": "$1",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "Microsoft Office Outlook 12\\.\\d+\\.\\d+|MSOffice 12",
      "Flags": "",
      "FamilyReplacement": "Outlook",
      "V1Replacement": "2007",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "Microsoft Outlook 14\\.\\d+\\.\\d+|MSOffice 14",
      "Flags": "",
      "FamilyReplacement": "Outlook",
      "V1Replacement": "2010",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "Microsoft Outlook 15\\.\\d+\\.\\d+",
      "Flags": "",
      "FamilyReplacement": "Outlook",
      "V1Replacement": "2013",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "Microsoft Outlook (?:Mail )?16\\.\\d+\\.\\d+",
      "Flags": "",
      "FamilyReplacement": "Outlook",
      "V1Replacement": "2016",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "Outlook-Express\\/7\\.0.*",
      "Flags": "",
      "FamilyReplacement": "Windows Live Mail",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Airmail) (\\d+)\\.(\\d+)(?:\\.(\\d+))?",
      "Flags": "",
      "FamilyReplacement": "$1",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Thunderbird)/(\\d+)\\.(\\d+)(?:\\.(\\d+(?:pre)?))?",
      "Flags": "",
      "FamilyReplacement": "Thunderbird",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Postbox)/(\\d+)\\.(\\d+)\\.(\\d+)",
      "Flags": "",
      "FamilyReplacement": "Postbox",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Barca(?:Pro)?)/(\\d+)\\.(\\d+)(?:\\.(\\d+))?",
      "Flags": "",
      "FamilyReplacement": "Barca",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Lotus-Notes)/(\\d+)\\.(\\d+)(?:\\.(\\d+))?",
      "Flags": "",
      "FamilyReplacement": "Lotus Notes",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Vivaldi)/(\\d+)\\.(\\d+)\\.(\\d+)",
      "Flags": "",
      "FamilyReplacement": "$1",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Edge)/(\\d+)\\.(\\d+)",
      "Flags": "",
      "FamilyReplacement": "$1",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(brave)/(\\d+)\\.(\\d+)\\.(\\d+) Chrome",
      "Flags": "",
      "FamilyReplacement": "Brave",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Chromium|Chrome)/(\\d+)\\.(\\d+)\\.(\\d+)",
      "Flags": "",
      "FamilyReplacement": "$1",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "\\b(Dolphin)(?: |HDCN/|/INT\\-)(\\d+)\\.(\\d+)\\.?(\\d+)?",
      "Flags": "",
      "FamilyReplacement": "$1",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(bingbot|Bolt|Jasmine|IceCat|Skyfire|Midori|Maxthon|Lynx|Arora|IBrowse|Dillo|Camino|Shiira|Fennec|Phoenix|Chrome|Flock|Netscape|Lunascape|Epiphany|WebPilot|Opera Mini|Opera|NetFront|Netfront|Konqueror|Googlebot|SeaMonkey|Kazehakase|Vienna|Iceape|Iceweasel|IceWeasel|Iron|K-Meleon|Sleipnir|Galeon|GranParadiso|iCab|iTunes|MacAppStore|NetNewsWire|Space Bison|Stainless|Orca|Dolfin|BOLT|Minimo|Tizen Browser|Polaris|Abrowser|Planetweb|ICE Browser|mDolphin|qutebrowser|Otter|QupZilla|MailBar|kmail2|YahooMobileMail)/(\\d+)\\.(\\d+)\\.?(\\d+)?",
      "Flags": "",
      "FamilyReplacement": "$1",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Chromium|Chrome)/(\\d+)\\.(\\d+)",
      "Flags": "",
      "FamilyReplacement": "$1",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(IEMobile)[ /](\\d+)\\.(\\d+)",
      "Flags": "",
      "FamilyReplacement": "IE Mobile",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(iRider|Crazy Browser|SkipStone|iCab|Lunascape|Sleipnir|Maemo Browser) (\\d+)\\.(\\d+)\\.(\\d+)",
      "Flags": "",
      "FamilyReplacement": "$1",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(iCab|Lunascape|Opera|Android|Jasmine|Polaris|The Bat!) (\\d+)\\.(\\d+)\\.?(\\d+)?",
      "Flags": "",
      "FamilyReplacement": "$1",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Kindle)/(\\d+)\\.(\\d+)",
      "Flags": "",
      "FamilyReplacement": "$1",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Android) Donut",
      "Flags": "",
      "FamilyReplacement": "$1",
      "V1Replacement": "1",
      "V2Replacement": "2",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Android) Eclair",
      "Flags": "",
      "FamilyReplacement": "$1",
      "V1Replacement": "2",
      "V2Replacement": "1",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Android) Froyo",
      "Flags": "",
      "FamilyReplacement": "$1",
      "V1Replacement": "2",
      "V2Replacement": "2",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Android) Gingerbread",
      "Flags": "",
      "FamilyReplacement": "$1",
      "V1Replacement": "2",
      "V2Replacement": "3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Android) Honeycomb",
      "Flags": "",
      "FamilyReplacement": "$1",
      "V1Replacement": "3",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(MSIE) (\\d+)\\.(\\d+).*XBLWP7",
      "Flags": "",
      "FamilyReplacement": "IE Large Screen",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Obigo)InternetBrowser",
      "Flags": "",
      "FamilyReplacement": "$1",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Obigo)\\-Browser",
      "Flags": "",
      "FamilyReplacement": "$1",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Obigo|OBIGO)[^\\d]*(\\d+)(?:.(\\d+))?",
      "Flags": "",
      "FamilyReplacement": "Obigo",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(MAXTHON|Maxthon) (\\d+)\\.(\\d+)",
      "Flags": "",
      "FamilyReplacement": "Maxthon",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Maxthon|MyIE2|Uzbl|Shiira)",
      "Flags": "",
      "FamilyReplacement": "$1",
      "V1Replacement": "0",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(BrowseX) \\((\\d+)\\.(\\d+)\\.(\\d+)",
      "Flags": "",
      "FamilyReplacement": "$1",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(NCSA_Mosaic)/(\\d+)\\.(\\d+)",
      "Flags": "",
      "FamilyReplacement": "NCSA Mosaic",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(POLARIS)/(\\d+)\\.(\\d+)",
      "Flags": "",
      "FamilyReplacement": "Polaris",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Embider)/(\\d+)\\.(\\d+)",
      "Flags": "",
      "FamilyReplacement": "Polaris",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(BonEcho)/(\\d+)\\.(\\d+)\\.?([ab]?\\d+)?",
      "Flags": "",
      "FamilyReplacement": "Bon Echo",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(iPod|iPhone|iPad).+Version/(\\d+)\\.(\\d+)(?:\\.(\\d+))?.* Safari",
      "Flags": "",
      "FamilyReplacement": "Mobile Safari",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(iPod|iPhone|iPad).+Version/(\\d+)\\.(\\d+)(?:\\.(\\d+))?",
      "Flags": "",
      "FamilyReplacement": "Mobile Safari UI/WKWebView",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(iPod|iPod touch|iPhone|iPad);.*CPU.*OS (\\d+)_(\\d+)(?:_(\\d+))?.*Mobile.* Safari",
      "Flags": "",
      "FamilyReplacement": "Mobile Safari",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(iPod|iPod touch|iPhone|iPad);.*CPU.*OS (\\d+)_(\\d+)(?:_(\\d+))?.*Mobile",
      "Flags": "",
      "FamilyReplacement": "Mobile Safari UI/WKWebView",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(iPod|iPhone|iPad).* Safari",
      "Flags": "",
      "FamilyReplacement": "Mobile Safari",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(iPod|iPhone|iPad)",
      "Flags": "",
      "FamilyReplacement": "Mobile Safari UI/WKWebView",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(AvantGo) (\\d+).(\\d+)",
      "Flags": "",
      "FamilyReplacement": "$1",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(OneBrowser)/(\\d+).(\\d+)",
      "Flags": "",
      "FamilyReplacement": "ONE Browser",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Avant)",
      "Flags": "",
      "FamilyReplacement": "$1",
      "V1Replacement": "1",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(QtCarBrowser)",
      "Flags": "",
      "FamilyReplacement": "$1",
      "V1Replacement": "1",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "^(iBrowser/Mini)(\\d+).(\\d+)",
      "Flags": "",
      "FamilyReplacement": "iBrowser Mini",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "^(iBrowser|iRAPP)/(\\d+).(\\d+)",
      "Flags": "",
      "FamilyReplacement": "$1",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "^(Nokia)",
      "Flags": "",
      "FamilyReplacement": "Nokia Services (WAP) Browser",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(NokiaBrowser)/(\\d+)\\.(\\d+).(\\d+)\\.(\\d+)",
      "Flags": "",
      "FamilyReplacement": "Nokia Browser",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(NokiaBrowser)/(\\d+)\\.(\\d+).(\\d+)",
      "Flags": "",
      "FamilyReplacement": "Nokia Browser",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(NokiaBrowser)/(\\d+)\\.(\\d+)",
      "Flags": "",
      "FamilyReplacement": "Nokia Browser",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(BrowserNG)/(\\d+)\\.(\\d+).(\\d+)",
      "Flags": "",
      "FamilyReplacement": "Nokia Browser",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Series60)/5\\.0",
      "Flags": "",
      "FamilyReplacement": "Nokia Browser",
      "V1Replacement": "7",
      "V2Replacement": "0",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Series60)/(\\d+)\\.(\\d+)",
      "Flags": "",
      "FamilyReplacement": "Nokia OSS Browser",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(S40OviBrowser)/(\\d+)\\.(\\d+)\\.(\\d+)\\.(\\d+)",
      "Flags": "",
      "FamilyReplacement": "Ovi Browser",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Nokia)[EN]?(\\d+)",
      "Flags": "",
      "FamilyReplacement": "$1",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(PlayBook).+RIM Tablet OS (\\d+)\\.(\\d+)\\.(\\d+)",
      "Flags": "",
      "FamilyReplacement": "BlackBerry WebKit",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Black[bB]erry|BB10).+Version/(\\d+)\\.(\\d+)\\.(\\d+)",
      "Flags": "",
      "FamilyReplacement": "BlackBerry WebKit",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Black[bB]erry)\\s?(\\d+)",
      "Flags": "",
      "FamilyReplacement": "BlackBerry",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(OmniWeb)/v(\\d+)\\.(\\d+)",
      "Flags": "",
      "FamilyReplacement": "$1",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Blazer)/(\\d+)\\.(\\d+)",
      "Flags": "",
      "FamilyReplacement": "Palm Blazer",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Pre)/(\\d+)\\.(\\d+)",
      "Flags": "",
      "FamilyReplacement": "Palm Pre",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(ELinks)/(\\d+)\\.(\\d+)",
      "Flags": "",
      "FamilyReplacement": "$1",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(ELinks) \\((\\d+)\\.(\\d+)",
      "Flags": "",
      "FamilyReplacement": "$1",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Links) \\((\\d+)\\.(\\d+)",
      "Flags": "",
      "FamilyReplacement": "$1",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(QtWeb) Internet Browser/(\\d+)\\.(\\d+)",
      "Flags": "",
      "FamilyReplacement": "$1",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(PhantomJS)/(\\d+)\\.(\\d+)\\.(\\d+)",
      "Flags": "",
      "FamilyReplacement": "$1",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(AppleWebKit)/(\\d+)\\.?(\\d+)?\\+ .* Safari",
      "Flags": "",
      "FamilyReplacement": "WebKit Nightly",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Version)/(\\d+)\\.(\\d+)(?:\\.(\\d+))?.*Safari/",
      "Flags": "",
      "FamilyReplacement": "Safari",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Safari)/\\d+",
      "Flags": "",
      "FamilyReplacement": "$1",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(OLPC)/Update(\\d+)\\.(\\d+)",
      "Flags": "",
      "FamilyReplacement": "$1",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(OLPC)/Update()\\.(\\d+)",
      "Flags": "",
      "FamilyReplacement": "$1",
      "V1Replacement": "0",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(SEMC\\-Browser)/(\\d+)\\.(\\d+)",
      "Flags": "",
      "FamilyReplacement": "$1",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Teleca)",
      "Flags": "",
      "FamilyReplacement": "Teleca Browser",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Phantom)/V(\\d+)\\.(\\d+)",
      "Flags": "",
      "FamilyReplacement": "Phantom Browser",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "Trident(.*)rv.(\\d+)\\.(\\d+)",
      "Flags": "",
      "FamilyReplacement": "IE",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Espial)/(\\d+)(?:\\.(\\d+))?(?:\\.(\\d+))?",
      "Flags": "",
      "FamilyReplacement": "$1",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(AppleWebKit)/(\\d+)\\.(\\d+)\\.(\\d+)",
      "Flags": "",
      "FamilyReplacement": "Apple Mail",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Firefox)/(\\d+)\\.(\\d+)\\.(\\d+)",
      "Flags": "",
      "FamilyReplacement": "$1",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Firefox)/(\\d+)\\.(\\d+)(pre|[ab]\\d+[a-z]*)?",
      "Flags": "",
      "FamilyReplacement": "$1",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "([MS]?IE) (\\d+)\\.(\\d+)",
      "Flags": "",
      "FamilyReplacement": "IE",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(python-requests)/(\\d+)\\.(\\d+)",
      "Flags": "",
      "FamilyReplacement": "Python Requests",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Java)[/ ]{0,1}\\d+\\.(\\d+)\\.(\\d+)[_-]*([a-zA-Z0-9]+)*",
      "Flags": "",
      "FamilyReplacement": "$1",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "^(Roku)/DVP-(\\d+)\\.(\\d+)",
      "Flags": "",
      "FamilyReplacement": "$1",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "MatchesCount": 0
    }
  ],
  "OS": [
    {
      "Reg": {},
      "Expr": "HbbTV/\\d+\\.\\d+\\.\\d+ \\( ;(LG)E ;NetCast 4.0",
      "Flags": "",
      "OSReplacement": "$1",
      "V1Replacement": "2013",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "HbbTV/\\d+\\.\\d+\\.\\d+ \\( ;(LG)E ;NetCast 3.0",
      "Flags": "",
      "OSReplacement": "$1",
      "V1Replacement": "2012",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "HbbTV/1.1.1 \\(;;;;;\\) Maple_2011",
      "Flags": "",
      "OSReplacement": "Samsung",
      "V1Replacement": "2011",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "HbbTV/\\d+\\.\\d+\\.\\d+ \\(;(Samsung);SmartTV([0-9]{4});.*FXPDEUC",
      "Flags": "",
      "OSReplacement": "$1",
      "V1Replacement": "$2",
      "V2Replacement": "UE40F7000",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "HbbTV/\\d+\\.\\d+\\.\\d+ \\(;(Samsung);SmartTV([0-9]{4});.*MST12DEUC",
      "Flags": "",
      "OSReplacement": "$1",
      "V1Replacement": "$2",
      "V2Replacement": "UE32F4500",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "HbbTV/1.1.1 \\(; (Philips);.*NETTV/4",
      "Flags": "",
      "OSReplacement": "$1",
      "V1Replacement": "2013",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "HbbTV/1.1.1 \\(; (Philips);.*NETTV/3",
      "Flags": "",
      "OSReplacement": "$1",
      "V1Replacement": "2012",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "HbbTV/1.1.1 \\(; (Philips);.*NETTV/2",
      "Flags": "",
      "OSReplacement": "$1",
      "V1Replacement": "2011",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "HbbTV/\\d+\\.\\d+\\.\\d+.*(firetv)-firefox-plugin (\\d+).(\\d+).(\\d+)",
      "Flags": "",
      "OSReplacement": "FireHbbTV",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "HbbTV/\\d+\\.\\d+\\.\\d+ \\(.*; ?([a-zA-Z]+) ?;.*(201[1-9]).*\\)",
      "Flags": "",
      "OSReplacement": "$1",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Windows Phone) (?:OS[ /])?(\\d+)\\.(\\d+)",
      "Flags": "",
      "OSReplacement": "$1",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Android)[ \\-/](\\d+)\\.(\\d+)(?:[.\\-]([a-z0-9]+))?",
      "Flags": "",
      "OSReplacement": "$1",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Android) Donut",
      "Flags": "",
      "OSReplacement": "$1",
      "V1Replacement": "1",
      "V2Replacement": "2",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Android) Eclair",
      "Flags": "",
      "OSReplacement": "$1",
      "V1Replacement": "2",
      "V2Replacement": "1",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Android) Froyo",
      "Flags": "",
      "OSReplacement": "$1",
      "V1Replacement": "2",
      "V2Replacement": "2",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Android) Gingerbread",
      "Flags": "",
      "OSReplacement": "$1",
      "V1Replacement": "2",
      "V2Replacement": "3",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Android) Honeycomb",
      "Flags": "",
      "OSReplacement": "$1",
      "V1Replacement": "3",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "^UCWEB.*; (Adr) (\\d+)\\.(\\d+)(?:[.\\-]([a-z0-9]+))?;",
      "Flags": "",
      "OSReplacement": "Android",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "^UCWEB.*; (iPad OS|iPh OS) (\\d+)_(\\d+)(?:_(\\d+))?;",
      "Flags": "",
      "OSReplacement": "iOS",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "^UCWEB.*; (wds) (\\d+)\\.(\\d+)(?:\\.(\\d+))?;",
      "Flags": "",
      "OSReplacement": "Windows Phone",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "^(JUC).*; ?U; ?(?:Android)?(\\d+)\\.(\\d+)(?:[\\.\\-]([a-z0-9]+))?",
      "Flags": "",
      "OSReplacement": "Android",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Silk-Accelerated=[a-z]{4,5})",
      "Flags": "",
      "OSReplacement": "Android",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(XBLWP7)",
      "Flags": "",
      "OSReplacement": "Windows Phone",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Windows ?Mobile)",
      "Flags": "",
      "OSReplacement": "Windows Mobile",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Windows (?:NT 5\\.2|NT 5\\.1))",
      "Flags": "",
      "OSReplacement": "Windows XP",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Windows NT 6\\.1)",
      "Flags": "",
      "OSReplacement": "Windows 7",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Windows NT 6\\.0)",
      "Flags": "",
      "OSReplacement": "Windows Vista",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Win 9x 4\\.90)",
      "Flags": "",
      "OSReplacement": "Windows ME",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Windows 98|Windows XP|Windows ME|Windows 95|Windows CE|Windows 7|Windows NT 4\\.0|Windows Vista|Windows 2000|Windows 3.1)",
      "Flags": "",
      "OSReplacement": "$1",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Windows NT 6\\.2; ARM;)",
      "Flags": "",
      "OSReplacement": "Windows RT",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Windows NT 6\\.2)",
      "Flags": "",
      "OSReplacement": "Windows 8",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Windows NT 6\\.3; ARM;)",
      "Flags": "",
      "OSReplacement": "Windows RT 8.1",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Windows NT 6\\.3)",
      "Flags": "",
      "OSReplacement": "Windows 8.1",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Windows NT 6\\.4)",
      "Flags": "",
      "OSReplacement": "Windows 10",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Windows NT 10\\.0)",
      "Flags": "",
      "OSReplacement": "Windows 10",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Windows NT 5\\.0)",
      "Flags": "",
      "OSReplacement": "Windows 2000",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(WinNT4.0)",
      "Flags": "",
      "OSReplacement": "Windows NT 4.0",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Windows ?CE)",
      "Flags": "",
      "OSReplacement": "Windows CE",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "Win ?(95|98|3.1|NT|ME|2000)",
      "Flags": "",
      "OSReplacement": "Windows $1",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "Win16",
      "Flags": "",
      "OSReplacement": "Windows 3.1",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "Win32",
      "Flags": "",
      "OSReplacement": "Windows 95",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Tizen)/(\\d+)\\.(\\d+)",
      "Flags": "",
      "OSReplacement": "$1",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "((?:Mac ?|; )OS X)[\\s/](?:(\\d+)[_.](\\d+)(?:[_.](\\d+))?|Mach-O)",
      "Flags": "",
      "OSReplacement": "Mac OS X",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": " (Dar)(win)/(9).(\\d+).*\\((?:i386|x86_64|Power Macintosh)\\)",
      "Flags": "",
      "OSReplacement": "Mac OS X",
      "V1Replacement": "10",
      "V2Replacement": "5",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": " (Dar)(win)/(10).(\\d+).*\\((?:i386|x86_64)\\)",
      "Flags": "",
      "OSReplacement": "Mac OS X",
      "V1Replacement": "10",
      "V2Replacement": "6",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": " (Dar)(win)/(11).(\\d+).*\\((?:i386|x86_64)\\)",
      "Flags": "",
      "OSReplacement": "Mac OS X",
      "V1Replacement": "10",
      "V2Replacement": "7",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": " (Dar)(win)/(12).(\\d+).*\\((?:i386|x86_64)\\)",
      "Flags": "",
      "OSReplacement": "Mac OS X",
      "V1Replacement": "10",
      "V2Replacement": "8",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": " (Dar)(win)/(13).(\\d+).*\\((?:i386|x86_64)\\)",
      "Flags": "",
      "OSReplacement": "Mac OS X",
      "V1Replacement": "10",
      "V2Replacement": "9",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "Mac_PowerPC",
      "Flags": "",
      "OSReplacement": "Mac OS",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(?:PPC|Intel) (Mac OS X)",
      "Flags": "",
      "OSReplacement": "$1",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Apple\\s?TV)(?:/(\\d+)\\.(\\d+))?",
      "Flags": "",
      "OSReplacement": "ATV OS X",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(CPU OS|iPhone OS|CPU iPhone) +(\\d+)[_\\.](\\d+)(?:[_\\.](\\d+))?",
      "Flags": "",
      "OSReplacement": "iOS",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(iPhone|iPad|iPod); Opera",
      "Flags": "",
      "OSReplacement": "iOS",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(iPhone|iPad|iPod).*Mac OS X.*Version/(\\d+)\\.(\\d+)",
      "Flags": "",
      "OSReplacement": "iOS",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(CFNetwork)/(5)48\\.0\\.3.* Darwin/11\\.0\\.0",
      "Flags": "",
      "OSReplacement": "iOS",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(CFNetwork)/(5)48\\.(0)\\.4.* Darwin/(1)1\\.0\\.0",
      "Flags": "",
      "OSReplacement": "iOS",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(CFNetwork)/(5)48\\.(1)\\.4",
      "Flags": "",
      "OSReplacement": "iOS",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(CFNetwork)/(4)85\\.1(3)\\.9",
      "Flags": "",
      "OSReplacement": "iOS",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(CFNetwork)/(6)09\\.(1)\\.4",
      "Flags": "",
      "OSReplacement": "iOS",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(CFNetwork)/(6)(0)9",
      "Flags": "",
      "OSReplacement": "iOS",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(CFNetwork)/6(7)2\\.(1)\\.13",
      "Flags": "",
      "OSReplacement": "iOS",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(CFNetwork)/6(7)2\\.(1)\\.(1)4",
      "Flags": "",
      "OSReplacement": "iOS",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(CF)(Network)/6(7)(2)\\.1\\.15",
      "Flags": "",
      "OSReplacement": "iOS",
      "V1Replacement": "7",
      "V2Replacement": "1",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(CFNetwork)/6(7)2\\.(0)\\.(?:2|8)",
      "Flags": "",
      "OSReplacement": "iOS",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(CFNetwork)/709\\.1",
      "Flags": "",
      "OSReplacement": "iOS",
      "V1Replacement": "8",
      "V2Replacement": "0.b5",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(CF)(Network)/711\\.(\\d)",
      "Flags": "",
      "OSReplacement": "iOS",
      "V1Replacement": "8",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(CF)(Network)/(720)\\.(\\d)",
      "Flags": "",
      "OSReplacement": "Mac OS X",
      "V1Replacement": "10",
      "V2Replacement": "10",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(CF)(Network)/758\\.(\\d)",
      "Flags": "",
      "OSReplacement": "iOS",
      "V1Replacement": "9",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "CFNetwork/.* Darwin/(9)\\.\\d+",
      "Flags": "",
      "OSReplacement": "iOS",
      "V1Replacement": "1",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "CFNetwork/.* Darwin/(10)\\.\\d+",
      "Flags": "",
      "OSReplacement": "iOS",
      "V1Replacement": "4",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "CFNetwork/.* Darwin/(11)\\.\\d+",
      "Flags": "",
      "OSReplacement": "iOS",
      "V1Replacement": "5",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "CFNetwork/.* Darwin/(13)\\.\\d+",
      "Flags": "",
      "OSReplacement": "iOS",
      "V1Replacement": "6",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "CFNetwork/6.* Darwin/(14)\\.\\d+",
      "Flags": "",
      "OSReplacement": "iOS",
      "V1Replacement": "7",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "CFNetwork/7.* Darwin/(14)\\.\\d+",
      "Flags": "",
      "OSReplacement": "iOS",
      "V1Replacement": "8",
      "V2Replacement": "0",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "CFNetwork/7.* Darwin/(15)\\.\\d+",
      "Flags": "",
      "OSReplacement": "iOS",
      "V1Replacement": "9",
      "V2Replacement": "0",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "CFNetwork/8.* Darwin/(16)\\.\\d+",
      "Flags": "",
      "OSReplacement": "iOS",
      "V1Replacement": "10",
      "V2Replacement": "0",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "\\b(iOS[ /]|iPhone(?:/| v|[ _]OS[/,]|; | OS : |\\d,\\d/|\\d,\\d; )|iPad/)(\\d{1,2})[_\\.](\\d{1,2})(?:[_\\.](\\d+))?",
      "Flags": "",
      "OSReplacement": "iOS",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(tvOS)/(\\d+).(\\d+)",
      "Flags": "",
      "OSReplacement": "tvOS",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(CrOS) [a-z0-9_]+ (\\d+)\\.(\\d+)(?:\\.(\\d+))?",
      "Flags": "",
      "OSReplacement": "Chrome OS",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "([Dd]ebian)",
      "Flags": "",
      "OSReplacement": "Debian",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Linux Mint)(?:/(\\d+))?",
      "Flags": "",
      "OSReplacement": "$1",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Mandriva)(?: Linux)?/(?:[\\d.-]+m[a-z]{2}(\\d+).(\\d))?",
      "Flags": "",
      "OSReplacement": "$1",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Symbian[Oo][Ss])[/ ](\\d+)\\.(\\d+)",
      "Flags": "",
      "OSReplacement": "Symbian OS",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Symbian/3).+NokiaBrowser/7\\.3",
      "Flags": "",
      "OSReplacement": "Symbian^3 Anna",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Symbian/3).+NokiaBrowser/7\\.4",
      "Flags": "",
      "OSReplacement": "Symbian^3 Belle",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Symbian/3)",
      "Flags": "",
      "OSReplacement": "Symbian^3",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "\\b(Series 60|SymbOS|S60Version|S60V\\d|S60\\b)",
      "Flags": "",
      "OSReplacement": "Symbian OS",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(MeeGo)",
      "Flags": "",
      "OSReplacement": "$1",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "Symbian [Oo][Ss]",
      "Flags": "",
      "OSReplacement": "Symbian OS",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "Series40;",
      "Flags": "",
      "OSReplacement": "Nokia Series 40",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "Series30Plus;",
      "Flags": "",
      "OSReplacement": "Nokia Series 30 Plus",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(BB10);.+Version/(\\d+)\\.(\\d+)\\.(\\d+)",
      "Flags": "",
      "OSReplacement": "BlackBerry OS",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Black[Bb]erry)[0-9a-z]+/(\\d+)\\.(\\d+)\\.(\\d+)(?:\\.(\\d+))?",
      "Flags": "",
      "OSReplacement": "BlackBerry OS",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Black[Bb]erry).+Version/(\\d+)\\.(\\d+)\\.(\\d+)(?:\\.(\\d+))?",
      "Flags": "",
      "OSReplacement": "BlackBerry OS",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(RIM Tablet OS) (\\d+)\\.(\\d+)\\.(\\d+)",
      "Flags": "",
      "OSReplacement": "BlackBerry Tablet OS",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Play[Bb]ook)",
      "Flags": "",
      "OSReplacement": "BlackBerry Tablet OS",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Black[Bb]erry)",
      "Flags": "",
      "OSReplacement": "BlackBerry OS",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "\\((?:Mobile|Tablet);.+Gecko/18.0 Firefox/\\d+\\.\\d+",
      "Flags": "",
      "OSReplacement": "Firefox OS",
      "V1Replacement": "1",
      "V2Replacement": "0",
      "V3Replacement": "1",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "\\((?:Mobile|Tablet);.+Gecko/18.1 Firefox/\\d+\\.\\d+",
      "Flags": "",
      "OSReplacement": "Firefox OS",
      "V1Replacement": "1",
      "V2Replacement": "1",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "\\((?:Mobile|Tablet);.+Gecko/26.0 Firefox/\\d+\\.\\d+",
      "Flags": "",
      "OSReplacement": "Firefox OS",
      "V1Replacement": "1",
      "V2Replacement": "2",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "\\((?:Mobile|Tablet);.+Gecko/28.0 Firefox/\\d+\\.\\d+",
      "Flags": "",
      "OSReplacement": "Firefox OS",
      "V1Replacement": "1",
      "V2Replacement": "3",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "\\((?:Mobile|Tablet);.+Gecko/30.0 Firefox/\\d+\\.\\d+",
      "Flags": "",
      "OSReplacement": "Firefox OS",
      "V1Replacement": "1",
      "V2Replacement": "4",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "\\((?:Mobile|Tablet);.+Gecko/32.0 Firefox/\\d+\\.\\d+",
      "Flags": "",
      "OSReplacement": "Firefox OS",
      "V1Replacement": "2",
      "V2Replacement": "0",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "\\((?:Mobile|Tablet);.+Gecko/34.0 Firefox/\\d+\\.\\d+",
      "Flags": "",
      "OSReplacement": "Firefox OS",
      "V1Replacement": "2",
      "V2Replacement": "1",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "\\((?:Mobile|Tablet);.+Firefox/\\d+\\.\\d+",
      "Flags": "",
      "OSReplacement": "Firefox OS",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(BREW)[ /](\\d+)\\.(\\d+)\\.(\\d+)",
      "Flags": "",
      "OSReplacement": "$1",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(BREW);",
      "Flags": "",
      "OSReplacement": "$1",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Brew MP|BMP)[ /](\\d+)\\.(\\d+)\\.(\\d+)",
      "Flags": "",
      "OSReplacement": "Brew MP",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "BMP;",
      "Flags": "",
      "OSReplacement": "Brew MP",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(GoogleTV)(?: (\\d+)\\.(\\d+)(?:\\.(\\d+))?|/[\\da-z]+)",
      "Flags": "",
      "OSReplacement": "$1",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(WebTV)/(\\d+).(\\d+)",
      "Flags": "",
      "OSReplacement": "$1",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(hpw|web)OS/(\\d+)\\.(\\d+)(?:\\.(\\d+))?",
      "Flags": "",
      "OSReplacement": "webOS",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(VRE);",
      "Flags": "",
      "OSReplacement": "$1",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Fedora|Red Hat|PCLinuxOS|Puppy|Ubuntu|Kindle|Bada|Lubuntu|BackTrack|Slackware|(?:Free|Open|Net|\\b)BSD)[/ ](\\d+)\\.(\\d+)(?:\\.(\\d+)(?:\\.(\\d+))?)?",
      "Flags": "",
      "OSReplacement": "$1",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Linux)[ /](\\d+)\\.(\\d+)(?:\\.(\\d+))?.*gentoo",
      "Flags": "",
      "OSReplacement": "Gentoo",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "\\((Bada);",
      "Flags": "",
      "OSReplacement": "$1",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Windows|Android|WeTab|Maemo|Web0S)",
      "Flags": "",
      "OSReplacement": "$1",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Ubuntu|Kubuntu|Arch Linux|CentOS|Slackware|Gentoo|openSUSE|SUSE|Red Hat|Fedora|PCLinuxOS|Mageia|(?:Free|Open|Net|\\b)BSD)",
      "Flags": "",
      "OSReplacement": "$1",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Linux)(?:[ /](\\d+)\\.(\\d+)(?:\\.(\\d+))?)?",
      "Flags": "",
      "OSReplacement": "$1",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "SunOS",
      "Flags": "",
      "OSReplacement": "Solaris",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "^(Roku)/DVP-(\\d+)\\.(\\d+)",
      "Flags": "",
      "OSReplacement": "$1",
      "V1Replacement": "$2",
      "V2Replacement": "$3",
      "V3Replacement": "$4",
      "V4Replacement": "$5",
      "MatchesCount": 0
    }
  ],
  "Device": [
    {
      "Reg": {},
      "Expr": "(?:(?:iPhone|Windows CE|Android).*(?:(?:Bot|Yeti)-Mobile|YRSpider|bots?/\\d|(?:bot|spider)\\.html)|AdsBot-Google-Mobile.*iPhone)",
      "Flags": "i",
      "DeviceReplacement": "Spider",
      "BrandReplacement": "Spider",
      "ModelReplacement": "Smartphone",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(?:DoCoMo|\\bMOT\\b|\\bLG\\b|Nokia|Samsung|SonyEricsson).*(?:(?:Bot|Yeti)-Mobile|bots?/\\d|(?:bot|crawler)\\.html|(?:jump|google|Wukong)bot|ichiro/mobile|/spider|YahooSeeker)",
      "Flags": "i",
      "DeviceReplacement": "Spider",
      "BrandReplacement": "Spider",
      "ModelReplacement": "Feature Phone",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "\\bSmartWatch *\\( *([^;]+) *; *([^;]+) *;",
      "Flags": "",
      "DeviceReplacement": "$1 $2",
      "BrandReplacement": "$1",
      "ModelReplacement": "$2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "Android Application[^\\-]+ - (Sony) ?(Ericsson)? (.+) \\w+ - ",
      "Flags": "",
      "DeviceReplacement": "$1 $2",
      "BrandReplacement": "$1$2",
      "ModelReplacement": "$3",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "Android Application[^\\-]+ - (?:HTC|HUAWEI|LGE|LENOVO|MEDION|TCT) (HTC|HUAWEI|LG|LENOVO|MEDION|ALCATEL)[ _\\-](.+) \\w+ - ",
      "Flags": "i",
      "DeviceReplacement": "$1 $2",
      "BrandReplacement": "$1",
      "ModelReplacement": "$2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "Android Application[^\\-]+ - ([^ ]+) (.+) \\w+ - ",
      "Flags": "",
      "DeviceReplacement": "$1 $2",
      "BrandReplacement": "$1",
      "ModelReplacement": "$2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *([BLRQ]C\\d{4}[A-Z]+) +Build/",
      "Flags": "",
      "DeviceReplacement": "3Q $1",
      "BrandReplacement": "3Q",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(?:3Q_)([^;/]+) +Build",
      "Flags": "",
      "DeviceReplacement": "3Q $1",
      "BrandReplacement": "3Q",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "Android [34].*; *(A100|A101|A110|A200|A210|A211|A500|A501|A510|A511|A700(?: Lite| 3G)?|A701|B1-A71|A1-\\d{3}|B1-\\d{3}|V360|V370|W500|W500P|W501|W501P|W510|W511|W700|Slider SL101|DA22[^;/]+) Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Acer",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *Acer Iconia Tab ([^;/]+) Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Acer",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(Z1[1235]0|E320[^/]*|S500|S510|Liquid[^;/]*|Iconia A\\d+) Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Acer",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(Acer |ACER )([^;/]+) Build",
      "Flags": "",
      "DeviceReplacement": "$1$2",
      "BrandReplacement": "Acer",
      "ModelReplacement": "$2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(Advent )?(Vega(?:Bean|Comb)?).* Build",
      "Flags": "",
      "DeviceReplacement": "$1$2",
      "BrandReplacement": "Advent",
      "ModelReplacement": "$2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(Ainol )?((?:NOVO|[Nn]ovo)[^;/]+) Build",
      "Flags": "",
      "DeviceReplacement": "$1$2",
      "BrandReplacement": "Ainol",
      "ModelReplacement": "$2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *AIRIS[ _\\-]?([^/;\\)]+) *(?:;|\\)|Build)",
      "Flags": "i",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Airis",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(OnePAD[^;/]+) Build",
      "Flags": "i",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Airis",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *Airpad[ \\-]([^;/]+) Build",
      "Flags": "",
      "DeviceReplacement": "Airpad $1",
      "BrandReplacement": "Airpad",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(one ?touch) (EVO7|T10|T20) Build",
      "Flags": "",
      "DeviceReplacement": "Alcatel One Touch $2",
      "BrandReplacement": "Alcatel",
      "ModelReplacement": "One Touch $2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(?:alcatel[ _])?(?:(?:one[ _]?touch[ _])|ot[ \\-])([^;/]+);? Build",
      "Flags": "i",
      "DeviceReplacement": "Alcatel One Touch $1",
      "BrandReplacement": "Alcatel",
      "ModelReplacement": "One Touch $1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(TCL)[ _]([^;/]+) Build",
      "Flags": "",
      "DeviceReplacement": "$1 $2",
      "BrandReplacement": "$1",
      "ModelReplacement": "$2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(Vodafone Smart II|Optimus_Madrid) Build",
      "Flags": "",
      "DeviceReplacement": "Alcatel $1",
      "BrandReplacement": "Alcatel",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *BASE_Lutea_3 Build",
      "Flags": "",
      "DeviceReplacement": "Alcatel One Touch 998",
      "BrandReplacement": "Alcatel",
      "ModelReplacement": "One Touch 998",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *BASE_Varia Build",
      "Flags": "",
      "DeviceReplacement": "Alcatel One Touch 918D",
      "BrandReplacement": "Alcatel",
      "ModelReplacement": "One Touch 918D",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *((?:FINE|Fine)\\d[^;/]+) Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Allfine",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(ALLVIEW[ _]?|Allview[ _]?)((?:Speed|SPEED).*) Build/",
      "Flags": "",
      "DeviceReplacement": "$1$2",
      "BrandReplacement": "Allview",
      "ModelReplacement": "$2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(ALLVIEW[ _]?|Allview[ _]?)?(AX1_Shine|AX2_Frenzy) Build",
      "Flags": "",
      "DeviceReplacement": "$1$2",
      "BrandReplacement": "Allview",
      "ModelReplacement": "$2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(ALLVIEW[ _]?|Allview[ _]?)([^;/]*) Build",
      "Flags": "",
      "DeviceReplacement": "$1$2",
      "BrandReplacement": "Allview",
      "ModelReplacement": "$2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(A13-MID) Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Allwinner",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(Allwinner)[ _\\-]?([^;/]+) Build",
      "Flags": "",
      "DeviceReplacement": "$1 $2",
      "BrandReplacement": "Allwinner",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(A651|A701B?|A702|A703|A705|A706|A707|A711|A712|A713|A717|A722|A785|A801|A802|A803|A901|A902|A1002|A1003|A1006|A1007|A9701|A9703|Q710|Q80) Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Amaway",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(?:AMOI|Amoi)[ _]([^;/]+) Build",
      "Flags": "",
      "DeviceReplacement": "Amoi $1",
      "BrandReplacement": "Amoi",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "^(?:AMOI|Amoi)[ _]([^;/]+) Linux",
      "Flags": "",
      "DeviceReplacement": "Amoi $1",
      "BrandReplacement": "Amoi",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(MW(?:0[789]|10)[^;/]+) Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Aoc",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(G7|M1013|M1015G|M11[CG]?|M-?12[B]?|M15|M19[G]?|M30[ACQ]?|M31[GQ]|M32|M33[GQ]|M36|M37|M38|M701T|M710|M712B|M713|M715G|M716G|M71(?:G|GS|T)?|M72[T]?|M73[T]?|M75[GT]?|M77G|M79T|M7L|M7LN|M81|M810|M81T|M82|M92|M92KS|M92S|M717G|M721|M722G|M723|M725G|M739|M785|M791|M92SK|M93D) Build",
      "Flags": "",
      "DeviceReplacement": "Aoson $1",
      "BrandReplacement": "Aoson",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *Aoson ([^;/]+) Build",
      "Flags": "i",
      "DeviceReplacement": "Aoson $1",
      "BrandReplacement": "Aoson",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *[Aa]panda[ _\\-]([^;/]+) Build",
      "Flags": "",
      "DeviceReplacement": "Apanda $1",
      "BrandReplacement": "Apanda",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(?:ARCHOS|Archos) ?(GAMEPAD.*?)(?: Build|[;/\\(\\)\\-])",
      "Flags": "",
      "DeviceReplacement": "Archos $1",
      "BrandReplacement": "Archos",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "ARCHOS; GOGI; ([^;]+);",
      "Flags": "",
      "DeviceReplacement": "Archos $1",
      "BrandReplacement": "Archos",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(?:ARCHOS|Archos)[ _]?(.*?)(?: Build|[;/\\(\\)\\-]|$)",
      "Flags": "",
      "DeviceReplacement": "Archos $1",
      "BrandReplacement": "Archos",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(AN(?:7|8|9|10|13)[A-Z0-9]{1,4}) Build",
      "Flags": "",
      "DeviceReplacement": "Archos $1",
      "BrandReplacement": "Archos",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(A28|A32|A43|A70(?:BHT|CHT|HB|S|X)|A101(?:B|C|IT)|A7EB|A7EB-WK|101G9|80G9) Build",
      "Flags": "",
      "DeviceReplacement": "Archos $1",
      "BrandReplacement": "Archos",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(PAD-FMD[^;/]+) Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Arival",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(BioniQ) ?([^;/]+) Build",
      "Flags": "",
      "DeviceReplacement": "$1 $2",
      "BrandReplacement": "Arival",
      "ModelReplacement": "$1 $2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(AN\\d[^;/]+|ARCHM\\d+) Build",
      "Flags": "",
      "DeviceReplacement": "Arnova $1",
      "BrandReplacement": "Arnova",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(?:ARNOVA|Arnova) ?([^;/]+) Build",
      "Flags": "",
      "DeviceReplacement": "Arnova $1",
      "BrandReplacement": "Arnova",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(?:ASSISTANT )?(AP)-?([1789]\\d{2}[A-Z]{0,2}|80104) Build",
      "Flags": "",
      "DeviceReplacement": "Assistant $1-$2",
      "BrandReplacement": "Assistant",
      "ModelReplacement": "$1-$2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(ME17\\d[^;/]*|ME3\\d{2}[^;/]+|K00[A-Z]|Nexus 10|Nexus 7(?: 2013)?|PadFone[^;/]*|Transformer[^;/]*|TF\\d{3}[^;/]*|eeepc) Build",
      "Flags": "",
      "DeviceReplacement": "Asus $1",
      "BrandReplacement": "Asus",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *ASUS[ _]*([^;/]+) Build",
      "Flags": "",
      "DeviceReplacement": "Asus $1",
      "BrandReplacement": "Asus",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *Garmin-Asus ([^;/]+) Build",
      "Flags": "",
      "DeviceReplacement": "Garmin-Asus $1",
      "BrandReplacement": "Garmin-Asus",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(Garminfone) Build",
      "Flags": "",
      "DeviceReplacement": "Garmin $1",
      "BrandReplacement": "Garmin-Asus",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; (@TAB-[^;/]+) Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Attab",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(T-(?:07|[^0]\\d)[^;/]+) Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Audiosonic",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(?:Axioo[ _\\-]([^;/]+)|(picopad)[ _\\-]([^;/]+)) Build",
      "Flags": "i",
      "DeviceReplacement": "Axioo $1$2 $3",
      "BrandReplacement": "Axioo",
      "ModelReplacement": "$1$2 $3",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(V(?:100|700|800)[^;/]*) Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Azend",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(IBAK\\-[^;/]*) Build",
      "Flags": "i",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Bak",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(HY5001|HY6501|X12|X21|I5) Build",
      "Flags": "",
      "DeviceReplacement": "Bedove $1",
      "BrandReplacement": "Bedove",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(JC-[^;/]*) Build",
      "Flags": "",
      "DeviceReplacement": "Benss $1",
      "BrandReplacement": "Benss",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(BB) ([^;/]+) Build",
      "Flags": "",
      "DeviceReplacement": "$1 $2",
      "BrandReplacement": "Blackberry",
      "ModelReplacement": "$2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(BlackBird)[ _](I8.*) Build",
      "Flags": "",
      "DeviceReplacement": "$1 $2",
      "BrandReplacement": "$1",
      "ModelReplacement": "$2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(BlackBird)[ _](.*) Build",
      "Flags": "",
      "DeviceReplacement": "$1 $2",
      "BrandReplacement": "$1",
      "ModelReplacement": "$2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *([0-9]+BP[EM][^;/]*|Endeavour[^;/]+) Build",
      "Flags": "",
      "DeviceReplacement": "Blaupunkt $1",
      "BrandReplacement": "Blaupunkt",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *((?:BLU|Blu)[ _\\-])([^;/]+) Build",
      "Flags": "",
      "DeviceReplacement": "$1$2",
      "BrandReplacement": "Blu",
      "ModelReplacement": "$2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(?:BMOBILE )?(Blu|BLU|DASH [^;/]+|VIVO 4\\.3|TANK 4\\.5) Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Blu",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(TOUCH\\d[^;/]+) Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Blusens",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(AX5\\d+) Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Bmobile",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *([Bb]q) ([^;/]+);? Build",
      "Flags": "",
      "DeviceReplacement": "$1 $2",
      "BrandReplacement": "bq",
      "ModelReplacement": "$2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(Maxwell [^;/]+) Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "bq",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *((?:B-Tab|B-TAB) ?\\d[^;/]+) Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Braun",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(Broncho) ([^;/]+) Build",
      "Flags": "",
      "DeviceReplacement": "$1 $2",
      "BrandReplacement": "$1",
      "ModelReplacement": "$2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *CAPTIVA ([^;/]+) Build",
      "Flags": "",
      "DeviceReplacement": "Captiva $1",
      "BrandReplacement": "Captiva",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(C771|CAL21|IS11CA) Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Casio",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(?:Cat|CAT) ([^;/]+) Build",
      "Flags": "",
      "DeviceReplacement": "Cat $1",
      "BrandReplacement": "Cat",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(?:Cat)(Nova.*) Build",
      "Flags": "",
      "DeviceReplacement": "Cat $1",
      "BrandReplacement": "Cat",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(INM8002KP|ADM8000KP_[AB]) Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Cat",
      "ModelReplacement": "Tablet PHOENIX 8.1J0",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(?:[Cc]elkon[ _\\*]|CELKON[ _\\*])([^;/\\)]+) ?(?:Build|;|\\))",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Celkon",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "Build/(?:[Cc]elkon)+_?([^;/_\\)]+)",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Celkon",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(CT)-?(\\d+) Build",
      "Flags": "",
      "DeviceReplacement": "$1$2",
      "BrandReplacement": "Celkon",
      "ModelReplacement": "$1$2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(A19|A19Q|A105|A107[^;/\\)]*) ?(?:Build|;|\\))",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Celkon",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(TPC[0-9]{4,5}) Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "ChangJia",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(Cloudfone)[ _](Excite)([^ ][^;/]+) Build",
      "Flags": "",
      "DeviceReplacement": "$1 $2 $3",
      "BrandReplacement": "Cloudfone",
      "ModelReplacement": "$1 $2 $3",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(Excite|ICE)[ _](\\d+[^;/]+) Build",
      "Flags": "",
      "DeviceReplacement": "Cloudfone $1 $2",
      "BrandReplacement": "Cloudfone",
      "ModelReplacement": "Cloudfone $1 $2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(Cloudfone|CloudPad)[ _]([^;/]+) Build",
      "Flags": "",
      "DeviceReplacement": "$1 $2",
      "BrandReplacement": "Cloudfone",
      "ModelReplacement": "$1 $2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *((?:Aquila|Clanga|Rapax)[^;/]+) Build",
      "Flags": "i",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Cmx",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(?:CFW-|Kyros )?(MID[0-9]{4}(?:[ABC]|SR|TV)?)(\\(3G\\)-4G| GB 8K| 3G| 8K| GB)? *(?:Build|[;\\)])",
      "Flags": "",
      "DeviceReplacement": "CobyKyros $1$2",
      "BrandReplacement": "CobyKyros",
      "ModelReplacement": "$1$2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *([^;/]*)Coolpad[ _]([^;/]+) Build",
      "Flags": "",
      "DeviceReplacement": "$1$2",
      "BrandReplacement": "Coolpad",
      "ModelReplacement": "$1$2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(CUBE[ _])?([KU][0-9]+ ?GT.*|A5300) Build",
      "Flags": "i",
      "DeviceReplacement": "$1$2",
      "BrandReplacement": "Cube",
      "ModelReplacement": "$2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *CUBOT ([^;/]+) Build",
      "Flags": "i",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Cubot",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(BOBBY) Build",
      "Flags": "i",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Cubot",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(Dslide [^;/]+) Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Danew",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(XCD)[ _]?(28|35) Build",
      "Flags": "",
      "DeviceReplacement": "Dell $1$2",
      "BrandReplacement": "Dell",
      "ModelReplacement": "$1$2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(001DL) Build",
      "Flags": "",
      "DeviceReplacement": "Dell $1",
      "BrandReplacement": "Dell",
      "ModelReplacement": "Streak",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(?:Dell|DELL) (Streak) Build",
      "Flags": "",
      "DeviceReplacement": "Dell $1",
      "BrandReplacement": "Dell",
      "ModelReplacement": "Streak",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(101DL|GS01|Streak Pro[^;/]*) Build",
      "Flags": "",
      "DeviceReplacement": "Dell $1",
      "BrandReplacement": "Dell",
      "ModelReplacement": "Streak Pro",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *([Ss]treak ?7) Build",
      "Flags": "",
      "DeviceReplacement": "Dell $1",
      "BrandReplacement": "Dell",
      "ModelReplacement": "Streak 7",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(Mini-3iX) Build",
      "Flags": "",
      "DeviceReplacement": "Dell $1",
      "BrandReplacement": "Dell",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(?:Dell|DELL)[ _](Aero|Venue|Thunder|Mini.*|Streak[ _]Pro) Build",
      "Flags": "",
      "DeviceReplacement": "Dell $1",
      "BrandReplacement": "Dell",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *Dell[ _]([^;/]+) Build",
      "Flags": "",
      "DeviceReplacement": "Dell $1",
      "BrandReplacement": "Dell",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *Dell ([^;/]+) Build",
      "Flags": "",
      "DeviceReplacement": "Dell $1",
      "BrandReplacement": "Dell",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(TA[CD]-\\d+[^;/]*) Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Denver",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(iP[789]\\d{2}(?:-3G)?|IP10\\d{2}(?:-8GB)?) Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Dex",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(AirTab)[ _\\-]([^;/]+) Build",
      "Flags": "",
      "DeviceReplacement": "$1 $2",
      "BrandReplacement": "DNS",
      "ModelReplacement": "$1 $2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(F\\-\\d[^;/]+) Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Fujitsu",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(HT-03A) Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "HTC",
      "ModelReplacement": "Magic",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(HT\\-\\d[^;/]+) Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "HTC",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(L\\-\\d[^;/]+) Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "LG",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(N\\-\\d[^;/]+) Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Nec",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(P\\-\\d[^;/]+) Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Panasonic",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(SC\\-\\d[^;/]+) Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Samsung",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(SH\\-\\d[^;/]+) Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Sharp",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(SO\\-\\d[^;/]+) Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "SonyEricsson",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(T\\-0[12][^;/]+) Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Toshiba",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(DOOV)[ _]([^;/]+) Build",
      "Flags": "",
      "DeviceReplacement": "$1 $2",
      "BrandReplacement": "DOOV",
      "ModelReplacement": "$2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(Enot|ENOT)[ -]?([^;/]+) Build",
      "Flags": "",
      "DeviceReplacement": "$1 $2",
      "BrandReplacement": "Enot",
      "ModelReplacement": "$2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *[^;/]+ Build/(?:CROSS|Cross)+[ _\\-]([^\\)]+)",
      "Flags": "",
      "DeviceReplacement": "CROSS $1",
      "BrandReplacement": "Evercoss",
      "ModelReplacement": "Cross $1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(CROSS|Cross)[ _\\-]([^;/]+) Build",
      "Flags": "",
      "DeviceReplacement": "$1 $2",
      "BrandReplacement": "Evercoss",
      "ModelReplacement": "Cross $2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *Explay[_ ](.+?)(?:[\\)]| Build)",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Explay",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(IQ.*) Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Fly",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(Fly|FLY)[ _](IQ[^;]+|F[34]\\d+[^;]*);? Build",
      "Flags": "",
      "DeviceReplacement": "$1 $2",
      "BrandReplacement": "Fly",
      "ModelReplacement": "$2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(M532|Q572|FJL21) Build/",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Fujitsu",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(G1) Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Galapad",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(Geeksphone) ([^;/]+) Build",
      "Flags": "",
      "DeviceReplacement": "$1 $2",
      "BrandReplacement": "$1",
      "ModelReplacement": "$2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(G[^F]?FIVE) ([^;/]+) Build",
      "Flags": "",
      "DeviceReplacement": "$1 $2",
      "BrandReplacement": "Gfive",
      "ModelReplacement": "$2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(Gionee)[ _\\-]([^;/]+)(?:/[^;/]+)? Build",
      "Flags": "i",
      "DeviceReplacement": "$1 $2",
      "BrandReplacement": "Gionee",
      "ModelReplacement": "$2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(GN\\d+[A-Z]?|INFINITY_PASSION|Ctrl_V1) Build",
      "Flags": "",
      "DeviceReplacement": "Gionee $1",
      "BrandReplacement": "Gionee",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(E3) Build/JOP40D",
      "Flags": "",
      "DeviceReplacement": "Gionee $1",
      "BrandReplacement": "Gionee",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *((?:FONE|QUANTUM|INSIGNIA) \\d+[^;/]*|PLAYTAB) Build",
      "Flags": "",
      "DeviceReplacement": "GoClever $1",
      "BrandReplacement": "GoClever",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *GOCLEVER ([^;/]+) Build",
      "Flags": "",
      "DeviceReplacement": "GoClever $1",
      "BrandReplacement": "GoClever",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(Glass \\d+) Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Google",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(GSmart)[ -]([^/]+) Build",
      "Flags": "",
      "DeviceReplacement": "$1 $2",
      "BrandReplacement": "Gigabyte",
      "ModelReplacement": "$1 $2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(imx5[13]_[^/]+) Build",
      "Flags": "",
      "DeviceReplacement": "Freescale $1",
      "BrandReplacement": "Freescale",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *Haier[ _\\-]([^/]+) Build",
      "Flags": "",
      "DeviceReplacement": "Haier $1",
      "BrandReplacement": "Haier",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(PAD1016) Build",
      "Flags": "",
      "DeviceReplacement": "Haipad $1",
      "BrandReplacement": "Haipad",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(M701|M7|M8|M9) Build",
      "Flags": "",
      "DeviceReplacement": "Haipad $1",
      "BrandReplacement": "Haipad",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(SN\\d+T[^;\\)/]*)(?: Build|[;\\)])",
      "Flags": "",
      "DeviceReplacement": "Hannspree $1",
      "BrandReplacement": "Hannspree",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "Build/HCL ME Tablet ([^;\\)]+)[\\);]",
      "Flags": "",
      "DeviceReplacement": "HCLme $1",
      "BrandReplacement": "HCLme",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *([^;\\/]+) Build/HCL",
      "Flags": "",
      "DeviceReplacement": "HCLme $1",
      "BrandReplacement": "HCLme",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(MID-?\\d{4}C[EM]) Build",
      "Flags": "",
      "DeviceReplacement": "Hena $1",
      "BrandReplacement": "Hena",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(EG\\d{2,}|HS-[^;/]+|MIRA[^;/]+) Build",
      "Flags": "",
      "DeviceReplacement": "Hisense $1",
      "BrandReplacement": "Hisense",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(andromax[^;/]+) Build",
      "Flags": "i",
      "DeviceReplacement": "Hisense $1",
      "BrandReplacement": "Hisense",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(?:AMAZE[ _](S\\d+)|(S\\d+)[ _]AMAZE) Build",
      "Flags": "",
      "DeviceReplacement": "AMAZE $1$2",
      "BrandReplacement": "hitech",
      "ModelReplacement": "AMAZE $1$2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(PlayBook) Build",
      "Flags": "",
      "DeviceReplacement": "HP $1",
      "BrandReplacement": "HP",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *HP ([^/]+) Build",
      "Flags": "",
      "DeviceReplacement": "HP $1",
      "BrandReplacement": "HP",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *([^/]+_tenderloin) Build",
      "Flags": "",
      "DeviceReplacement": "HP TouchPad",
      "BrandReplacement": "HP",
      "ModelReplacement": "TouchPad",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(HUAWEI |Huawei-)?([UY][^;/]+) Build/(?:Huawei|HUAWEI)([UY][^\\);]+)\\)",
      "Flags": "",
      "DeviceReplacement": "$1$2",
      "BrandReplacement": "Huawei",
      "ModelReplacement": "$2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *([^;/]+) Build[/ ]Huawei(MT1-U06|[A-Z]+\\d+[^\\);]+)[^\\);]*\\)",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Huawei",
      "ModelReplacement": "$2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(S7|M860) Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Huawei",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *((?:HUAWEI|Huawei)[ \\-]?)(MediaPad) Build",
      "Flags": "",
      "DeviceReplacement": "$1$2",
      "BrandReplacement": "Huawei",
      "ModelReplacement": "$2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *((?:HUAWEI[ _]?|Huawei[ _])?Ascend[ _])([^;/]+) Build",
      "Flags": "",
      "DeviceReplacement": "$1$2",
      "BrandReplacement": "Huawei",
      "ModelReplacement": "$2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *((?:HUAWEI|Huawei)[ _\\-]?)((?:G700-|MT-)[^;/]+) Build",
      "Flags": "",
      "DeviceReplacement": "$1$2",
      "BrandReplacement": "Huawei",
      "ModelReplacement": "$2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *((?:HUAWEI|Huawei)[ _\\-]?)([^;/]+) Build",
      "Flags": "",
      "DeviceReplacement": "$1$2",
      "BrandReplacement": "Huawei",
      "ModelReplacement": "$2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(MediaPad[^;]+|SpringBoard) Build/Huawei",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Huawei",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *([^;]+) Build/Huawei",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Huawei",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *([Uu])([89]\\d{3}) Build",
      "Flags": "",
      "DeviceReplacement": "$1$2",
      "BrandReplacement": "Huawei",
      "ModelReplacement": "U$2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(?:Ideos |IDEOS )(S7) Build",
      "Flags": "",
      "DeviceReplacement": "Huawei Ideos$1",
      "BrandReplacement": "Huawei",
      "ModelReplacement": "Ideos$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(?:Ideos |IDEOS )([^;/]+\\s*|\\s*)Build",
      "Flags": "",
      "DeviceReplacement": "Huawei Ideos$1",
      "BrandReplacement": "Huawei",
      "ModelReplacement": "Ideos$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(Orange Daytona|Pulse|Pulse Mini|Vodafone 858|C8500|C8600|C8650|C8660|Nexus 6P) Build",
      "Flags": "",
      "DeviceReplacement": "Huawei $1",
      "BrandReplacement": "Huawei",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *HTC[ _]([^;]+); Windows Phone",
      "Flags": "",
      "DeviceReplacement": "HTC $1",
      "BrandReplacement": "HTC",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(?:HTC[ _/])+([^ _/]+)(?:[/\\\\]1\\.0 | V|/| +)\\d+\\.\\d[\\d\\.]*(?: *Build|\\))",
      "Flags": "",
      "DeviceReplacement": "HTC $1",
      "BrandReplacement": "HTC",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(?:HTC[ _/])+([^ _/]+)(?:[ _/]([^ _/]+))?(?:[/\\\\]1\\.0 | V|/| +)\\d+\\.\\d[\\d\\.]*(?: *Build|\\))",
      "Flags": "",
      "DeviceReplacement": "HTC $1 $2",
      "BrandReplacement": "HTC",
      "ModelReplacement": "$1 $2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(?:HTC[ _/])+([^ _/]+)(?:[ _/]([^ _/]+)(?:[ _/]([^ _/]+))?)?(?:[/\\\\]1\\.0 | V|/| +)\\d+\\.\\d[\\d\\.]*(?: *Build|\\))",
      "Flags": "",
      "DeviceReplacement": "HTC $1 $2 $3",
      "BrandReplacement": "HTC",
      "ModelReplacement": "$1 $2 $3",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(?:HTC[ _/])+([^ _/]+)(?:[ _/]([^ _/]+)(?:[ _/]([^ _/]+)(?:[ _/]([^ _/]+))?)?)?(?:[/\\\\]1\\.0 | V|/| +)\\d+\\.\\d[\\d\\.]*(?: *Build|\\))",
      "Flags": "",
      "DeviceReplacement": "HTC $1 $2 $3 $4",
      "BrandReplacement": "HTC",
      "ModelReplacement": "$1 $2 $3 $4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(?:(?:HTC|htc)(?:_blocked)*[ _/])+([^ _/;]+)(?: *Build|[;\\)]| - )",
      "Flags": "",
      "DeviceReplacement": "HTC $1",
      "BrandReplacement": "HTC",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(?:(?:HTC|htc)(?:_blocked)*[ _/])+([^ _/]+)(?:[ _/]([^ _/;\\)]+))?(?: *Build|[;\\)]| - )",
      "Flags": "",
      "DeviceReplacement": "HTC $1 $2",
      "BrandReplacement": "HTC",
      "ModelReplacement": "$1 $2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(?:(?:HTC|htc)(?:_blocked)*[ _/])+([^ _/]+)(?:[ _/]([^ _/]+)(?:[ _/]([^ _/;\\)]+))?)?(?: *Build|[;\\)]| - )",
      "Flags": "",
      "DeviceReplacement": "HTC $1 $2 $3",
      "BrandReplacement": "HTC",
      "ModelReplacement": "$1 $2 $3",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(?:(?:HTC|htc)(?:_blocked)*[ _/])+([^ _/]+)(?:[ _/]([^ _/]+)(?:[ _/]([^ _/]+)(?:[ _/]([^ /;]+))?)?)?(?: *Build|[;\\)]| - )",
      "Flags": "",
      "DeviceReplacement": "HTC $1 $2 $3 $4",
      "BrandReplacement": "HTC",
      "ModelReplacement": "$1 $2 $3 $4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "HTC Streaming Player [^\\/]*/[^\\/]*/ htc_([^/]+) /",
      "Flags": "",
      "DeviceReplacement": "HTC $1",
      "BrandReplacement": "HTC",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(?:[;,] *|^)(?:htccn_chs-)?HTC[ _-]?([^;]+?)(?: *Build|clay|Android|-?Mozilla| Opera| Profile| UNTRUSTED|[;/\\(\\)]|$)",
      "Flags": "i",
      "DeviceReplacement": "HTC $1",
      "BrandReplacement": "HTC",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(A6277|ADR6200|ADR6300|ADR6350|ADR6400[A-Z]*|ADR6425[A-Z]*|APX515CKT|ARIA|Desire[^_ ]*|Dream|EndeavorU|Eris|Evo|Flyer|HD2|Hero|HERO200|Hero CDMA|HTL21|Incredible|Inspire[A-Z0-9]*|Legend|Liberty|Nexus ?(?:One|HD2)|One|One S C2|One[ _]?(?:S|V|X\\+?)\\w*|PC36100|PG06100|PG86100|S31HT|Sensation|Wildfire)(?: Build|[/;\\(\\)])",
      "Flags": "i",
      "DeviceReplacement": "HTC $1",
      "BrandReplacement": "HTC",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(ADR6200|ADR6400L|ADR6425LVW|Amaze|DesireS?|EndeavorU|Eris|EVO|Evo\\d[A-Z]+|HD2|IncredibleS?|Inspire[A-Z0-9]*|Inspire[A-Z0-9]*|Sensation[A-Z0-9]*|Wildfire)[ _-](.+?)(?:[/;\\)]|Build|MIUI|1\\.0)",
      "Flags": "i",
      "DeviceReplacement": "HTC $1 $2",
      "BrandReplacement": "HTC",
      "ModelReplacement": "$1 $2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *HYUNDAI (T\\d[^/]*) Build",
      "Flags": "",
      "DeviceReplacement": "Hyundai $1",
      "BrandReplacement": "Hyundai",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *HYUNDAI ([^;/]+) Build",
      "Flags": "",
      "DeviceReplacement": "Hyundai $1",
      "BrandReplacement": "Hyundai",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(X700|Hold X|MB-6900) Build",
      "Flags": "",
      "DeviceReplacement": "Hyundai $1",
      "BrandReplacement": "Hyundai",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(?:iBall[ _\\-])?(Andi)[ _]?(\\d[^;/]*) Build",
      "Flags": "i",
      "DeviceReplacement": "$1 $2",
      "BrandReplacement": "iBall",
      "ModelReplacement": "$1 $2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(IBall)(?:[ _]([^;/]+)|) Build",
      "Flags": "i",
      "DeviceReplacement": "$1 $2",
      "BrandReplacement": "iBall",
      "ModelReplacement": "$2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(NT-\\d+[^ ;/]*|Net[Tt]AB [^;/]+|Mercury [A-Z]+|iconBIT)(?: S/N:[^;/]+)? Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "IconBIT",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(IMO)[ _]([^;/]+) Build",
      "Flags": "i",
      "DeviceReplacement": "$1 $2",
      "BrandReplacement": "IMO",
      "ModelReplacement": "$2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *i-?mobile[ _]([^/]+) Build/",
      "Flags": "i",
      "DeviceReplacement": "i-mobile $1",
      "BrandReplacement": "imobile",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(i-(?:style|note)[^/]*) Build/",
      "Flags": "i",
      "DeviceReplacement": "i-mobile $1",
      "BrandReplacement": "imobile",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(ImPAD) ?(\\d+(?:.)*) Build",
      "Flags": "",
      "DeviceReplacement": "$1 $2",
      "BrandReplacement": "Impression",
      "ModelReplacement": "$1 $2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(Infinix)[ _]([^;/]+) Build",
      "Flags": "",
      "DeviceReplacement": "$1 $2",
      "BrandReplacement": "Infinix",
      "ModelReplacement": "$2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(Informer)[ \\-]([^;/]+) Build",
      "Flags": "",
      "DeviceReplacement": "$1 $2",
      "BrandReplacement": "Informer",
      "ModelReplacement": "$2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(TAB) ?([78][12]4) Build",
      "Flags": "",
      "DeviceReplacement": "Intenso $1",
      "BrandReplacement": "Intenso",
      "ModelReplacement": "$1 $2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(?:Intex[ _])?(AQUA|Aqua)([ _\\.\\-])([^;/]+) *(?:Build|;)",
      "Flags": "",
      "DeviceReplacement": "$1$2$3",
      "BrandReplacement": "Intex",
      "ModelReplacement": "$1 $3",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(?:INTEX|Intex)(?:[_ ]([^\\ _;/]+))(?:[_ ]([^\\ _;/]+))? *(?:Build|;)",
      "Flags": "",
      "DeviceReplacement": "$1 $2",
      "BrandReplacement": "Intex",
      "ModelReplacement": "$1 $2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *([iI]Buddy)[ _]?(Connect)(?:_|\\?_| )?([^;/]*) *(?:Build|;)",
      "Flags": "",
      "DeviceReplacement": "$1 $2 $3",
      "BrandReplacement": "Intex",
      "ModelReplacement": "iBuddy $2 $3",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(I-Buddy)[ _]([^;/]+) *(?:Build|;)",
      "Flags": "",
      "DeviceReplacement": "$1 $2",
      "BrandReplacement": "Intex",
      "ModelReplacement": "iBuddy $2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(iOCEAN) ([^/]+) Build",
      "Flags": "i",
      "DeviceReplacement": "$1 $2",
      "BrandReplacement": "iOCEAN",
      "ModelReplacement": "$2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(TP\\d+(?:\\.\\d+)?\\-\\d[^;/]+) Build",
      "Flags": "",
      "DeviceReplacement": "ionik $1",
      "BrandReplacement": "ionik",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(M702pro) Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Iru",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(DE88Plus|MD70) Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Ivio",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *IVIO[_\\-]([^;/]+) Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Ivio",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(TPC-\\d+|JAY-TECH) Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Jaytech",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(JY-[^;/]+|G[234]S?) Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Jiayu",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(JXD)[ _\\-]([^;/]+) Build",
      "Flags": "",
      "DeviceReplacement": "$1 $2",
      "BrandReplacement": "JXD",
      "ModelReplacement": "$2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *Karbonn[ _]?([^;/]+) *(?:Build|;)",
      "Flags": "i",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Karbonn",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *([^;]+) Build/Karbonn",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Karbonn",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(A11|A39|A37|A34|ST8|ST10|ST7|Smart Tab3|Smart Tab2|Titanium S\\d) +Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Karbonn",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(IS01|IS03|IS05|IS\\d{2}SH) Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Sharp",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(IS04) Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Regza",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(IS06|IS\\d{2}PT) Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Pantech",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(IS11S) Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "SonyEricsson",
      "ModelReplacement": "Xperia Acro",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(IS11CA) Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Casio",
      "ModelReplacement": "GzOne $1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(IS11LG) Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "LG",
      "ModelReplacement": "Optimus X",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(IS11N) Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Medias",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(IS11PT) Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Pantech",
      "ModelReplacement": "MIRACH",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(IS12F) Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Fujitsu",
      "ModelReplacement": "Arrows ES",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(IS12M) Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Motorola",
      "ModelReplacement": "XT909",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(IS12S) Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "SonyEricsson",
      "ModelReplacement": "Xperia Acro HD",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(ISW11F) Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Fujitsu",
      "ModelReplacement": "Arrowz Z",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(ISW11HT) Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "HTC",
      "ModelReplacement": "EVO",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(ISW11K) Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Kyocera",
      "ModelReplacement": "DIGNO",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(ISW11M) Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Motorola",
      "ModelReplacement": "Photon",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(ISW11SC) Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Samsung",
      "ModelReplacement": "GALAXY S II WiMAX",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(ISW12HT) Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "HTC",
      "ModelReplacement": "EVO 3D",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(ISW13HT) Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "HTC",
      "ModelReplacement": "J",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(ISW?[0-9]{2}[A-Z]{0,2}) Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "KDDI",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(INFOBAR [^;/]+) Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "KDDI",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(JOYPAD|Joypad)[ _]([^;/]+) Build/",
      "Flags": "",
      "DeviceReplacement": "$1 $2",
      "BrandReplacement": "Kingcom",
      "ModelReplacement": "$1 $2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(Vox|VOX|Arc|K080) Build/",
      "Flags": "i",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Kobo",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "\\b(Kobo Touch)\\b",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Kobo",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(K-Touch)[ _]([^;/]+) Build",
      "Flags": "i",
      "DeviceReplacement": "$1 $2",
      "BrandReplacement": "Ktouch",
      "ModelReplacement": "$2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *((?:EV|KM)-S\\d+[A-Z]?) Build",
      "Flags": "i",
      "DeviceReplacement": "$1",
      "BrandReplacement": "KTtech",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(Zio|Hydro|Torque|Event|EVENT|Echo|Milano|Rise|URBANO PROGRESSO|WX04K|WX06K|WX10K|KYL21|101K|C5[12]\\d{2}) Build/",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Kyocera",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(?:LAVA[ _])?IRIS[ _\\-]?([^/;\\)]+) *(?:;|\\)|Build)",
      "Flags": "i",
      "DeviceReplacement": "Iris $1",
      "BrandReplacement": "Lava",
      "ModelReplacement": "Iris $1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *LAVA[ _]([^;/]+) Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Lava",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(?:(Aspire A1)|(?:LEMON|Lemon)[ _]([^;/]+))_? Build",
      "Flags": "",
      "DeviceReplacement": "Lemon $1$2",
      "BrandReplacement": "Lemon",
      "ModelReplacement": "$1$2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(TAB-1012) Build/",
      "Flags": "",
      "DeviceReplacement": "Lenco $1",
      "BrandReplacement": "Lenco",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; Lenco ([^;/]+) Build/",
      "Flags": "",
      "DeviceReplacement": "Lenco $1",
      "BrandReplacement": "Lenco",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(A1_07|A2107A-H|S2005A-H|S1-37AH0) Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Lenovo",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(Idea[Tp]ab)[ _]([^;/]+);? Build",
      "Flags": "",
      "DeviceReplacement": "Lenovo $1 $2",
      "BrandReplacement": "Lenovo",
      "ModelReplacement": "$1 $2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(Idea(?:Tab|pad)) ?([^;/]+) Build",
      "Flags": "",
      "DeviceReplacement": "Lenovo $1 $2",
      "BrandReplacement": "Lenovo",
      "ModelReplacement": "$1 $2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(ThinkPad) ?(Tablet) Build/",
      "Flags": "",
      "DeviceReplacement": "Lenovo $1 $2",
      "BrandReplacement": "Lenovo",
      "ModelReplacement": "$1 $2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(?:LNV-)?(?:=?[Ll]enovo[ _\\-]?|LENOVO[ _])+(.+?)(?:Build|[;/\\)])",
      "Flags": "",
      "DeviceReplacement": "Lenovo $1",
      "BrandReplacement": "Lenovo",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "[;,] (?:Vodafone )?(SmartTab) ?(II) ?(\\d+) Build/",
      "Flags": "",
      "DeviceReplacement": "Lenovo $1 $2 $3",
      "BrandReplacement": "Lenovo",
      "ModelReplacement": "$1 $2 $3",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(?:Ideapad )?K1 Build/",
      "Flags": "",
      "DeviceReplacement": "Lenovo Ideapad K1",
      "BrandReplacement": "Lenovo",
      "ModelReplacement": "Ideapad K1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(3GC101|3GW10[01]|A390) Build/",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Lenovo",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "\\b(?:Lenovo|LENOVO)+[ _\\-]?([^,;:/ ]+)",
      "Flags": "",
      "DeviceReplacement": "Lenovo $1",
      "BrandReplacement": "Lenovo",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(MFC\\d+)[A-Z]{2}([^;,/]*),? Build",
      "Flags": "",
      "DeviceReplacement": "$1$2",
      "BrandReplacement": "Lexibook",
      "ModelReplacement": "$1$2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(E[34][0-9]{2}|LS[6-8][0-9]{2}|VS[6-9][0-9]+[^;/]+|Nexus 4|Nexus 5X?|GT540f?|Optimus (?:2X|G|4X HD)|OptimusX4HD) *(?:Build|;)",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "LG",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "[;:] *(L-\\d+[A-Z]|LGL\\d+[A-Z]?)(?:/V\\d+)? *(?:Build|[;\\)])",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "LG",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(LG-)([A-Z]{1,2}\\d{2,}[^,;/\\)\\(]*?)(?:Build| V\\d+|[,;/\\)\\(]|$)",
      "Flags": "",
      "DeviceReplacement": "$1$2",
      "BrandReplacement": "LG",
      "ModelReplacement": "$2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(LG[ \\-]|LG)([^;/]+)[;/]? Build",
      "Flags": "",
      "DeviceReplacement": "$1$2",
      "BrandReplacement": "LG",
      "ModelReplacement": "$2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "^(LG)-([^;/]+)/ Mozilla/.*; Android",
      "Flags": "",
      "DeviceReplacement": "$1 $2",
      "BrandReplacement": "LG",
      "ModelReplacement": "$2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Web0S); Linux/(SmartTV)",
      "Flags": "",
      "DeviceReplacement": "LG $1 $2",
      "BrandReplacement": "LG",
      "ModelReplacement": "$1 $2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *((?:SMB|smb)[^;/]+) Build/",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Malata",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(?:Malata|MALATA) ([^;/]+) Build/",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Malata",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(MS[45][0-9]{3}|MID0[568][NS]?|MID[1-9]|MID[78]0[1-9]|MID970[1-9]|MID100[1-9]) Build/",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Manta",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(M1052|M806|M9000|M9100|M9701|MID100|MID120|MID125|MID130|MID135|MID140|MID701|MID710|MID713|MID727|MID728|MID731|MID732|MID733|MID735|MID736|MID737|MID760|MID800|MID810|MID820|MID830|MID833|MID835|MID860|MID900|MID930|MID933|MID960|MID980) Build/",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Match",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(GenxDroid7|MSD7.*|AX\\d.*|Tab 701|Tab 722) Build/",
      "Flags": "",
      "DeviceReplacement": "Maxx $1",
      "BrandReplacement": "Maxx",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(M-PP[^;/]+|PhonePad ?\\d{2,}[^;/]+) Build",
      "Flags": "",
      "DeviceReplacement": "Mediacom $1",
      "BrandReplacement": "Mediacom",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(M-MP[^;/]+|SmartPad ?\\d{2,}[^;/]+) Build",
      "Flags": "",
      "DeviceReplacement": "Mediacom $1",
      "BrandReplacement": "Mediacom",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(?:MD_)?LIFETAB[ _]([^;/]+) Build",
      "Flags": "i",
      "DeviceReplacement": "Medion Lifetab $1",
      "BrandReplacement": "Medion",
      "ModelReplacement": "Lifetab $1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *MEDION ([^;/]+) Build",
      "Flags": "",
      "DeviceReplacement": "Medion $1",
      "BrandReplacement": "Medion",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(M030|M031|M035|M040|M065|m9) Build",
      "Flags": "",
      "DeviceReplacement": "Meizu $1",
      "BrandReplacement": "Meizu",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(?:meizu_|MEIZU )(.+?) *(?:Build|[;\\)])",
      "Flags": "",
      "DeviceReplacement": "Meizu $1",
      "BrandReplacement": "Meizu",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(?:Micromax[ _](A111|A240)|(A111|A240)) Build",
      "Flags": "i",
      "DeviceReplacement": "Micromax $1$2",
      "BrandReplacement": "Micromax",
      "ModelReplacement": "$1$2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *Micromax[ _](A\\d{2,3}[^;/]*) Build",
      "Flags": "i",
      "DeviceReplacement": "Micromax $1",
      "BrandReplacement": "Micromax",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(A\\d{2}|A[12]\\d{2}|A90S|A110Q) Build",
      "Flags": "i",
      "DeviceReplacement": "Micromax $1",
      "BrandReplacement": "Micromax",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *Micromax[ _](P\\d{3}[^;/]*) Build",
      "Flags": "i",
      "DeviceReplacement": "Micromax $1",
      "BrandReplacement": "Micromax",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(P\\d{3}|P\\d{3}\\(Funbook\\)) Build",
      "Flags": "i",
      "DeviceReplacement": "Micromax $1",
      "BrandReplacement": "Micromax",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(MITO)[ _\\-]?([^;/]+) Build",
      "Flags": "i",
      "DeviceReplacement": "$1 $2",
      "BrandReplacement": "Mito",
      "ModelReplacement": "$2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(Cynus)[ _](F5|T\\d|.+?) *(?:Build|[;/\\)])",
      "Flags": "i",
      "DeviceReplacement": "$1 $2",
      "BrandReplacement": "Mobistel",
      "ModelReplacement": "$1 $2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(MODECOM )?(FreeTab) ?([^;/]+) Build",
      "Flags": "i",
      "DeviceReplacement": "$1$2 $3",
      "BrandReplacement": "Modecom",
      "ModelReplacement": "$2 $3",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(MODECOM )([^;/]+) Build",
      "Flags": "i",
      "DeviceReplacement": "$1 $2",
      "BrandReplacement": "Modecom",
      "ModelReplacement": "$2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(MZ\\d{3}\\+?|MZ\\d{3} 4G|Xoom|XOOM[^;/]*) Build",
      "Flags": "",
      "DeviceReplacement": "Motorola $1",
      "BrandReplacement": "Motorola",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(Milestone )(XT[^;/]*) Build",
      "Flags": "",
      "DeviceReplacement": "Motorola $1$2",
      "BrandReplacement": "Motorola",
      "ModelReplacement": "$2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(Motoroi ?x|Droid X|DROIDX) Build",
      "Flags": "i",
      "DeviceReplacement": "Motorola $1",
      "BrandReplacement": "Motorola",
      "ModelReplacement": "DROID X",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(Droid[^;/]*|DROID[^;/]*|Milestone[^;/]*|Photon|Triumph|Devour|Titanium) Build",
      "Flags": "",
      "DeviceReplacement": "Motorola $1",
      "BrandReplacement": "Motorola",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(A555|A85[34][^;/]*|A95[356]|ME[58]\\d{2}\\+?|ME600|ME632|ME722|MB\\d{3}\\+?|MT680|MT710|MT870|MT887|MT917|WX435|WX453|WX44[25]|XT\\d{3,4}[A-Z\\+]*|CL[iI]Q|CL[iI]Q XT) Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Motorola",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(Motorola MOT-|Motorola[ _\\-]|MOT\\-?)([^;/]+) Build",
      "Flags": "",
      "DeviceReplacement": "$1$2",
      "BrandReplacement": "Motorola",
      "ModelReplacement": "$2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(Moto[_ ]?|MOT\\-)([^;/]+) Build",
      "Flags": "",
      "DeviceReplacement": "$1$2",
      "BrandReplacement": "Motorola",
      "ModelReplacement": "$2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *((?:MP[DQ]C|MPG\\d{1,4}|MP\\d{3,4}|MID(?:(?:10[234]|114|43|7[247]|8[24]|7)C|8[01]1))[^;/]*) Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Mpman",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(?:MSI[ _])?(Primo\\d+|Enjoy[ _\\-][^;/]+) Build",
      "Flags": "i",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Msi",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *Multilaser[ _]([^;/]+) Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Multilaser",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(My)[_]?(Pad)[ _]([^;/]+) Build",
      "Flags": "",
      "DeviceReplacement": "$1$2 $3",
      "BrandReplacement": "MyPhone",
      "ModelReplacement": "$1$2 $3",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(My)\\|?(Phone)[ _]([^;/]+) Build",
      "Flags": "",
      "DeviceReplacement": "$1$2 $3",
      "BrandReplacement": "MyPhone",
      "ModelReplacement": "$3",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(A\\d+)[ _](Duo)? Build",
      "Flags": "i",
      "DeviceReplacement": "$1 $2",
      "BrandReplacement": "MyPhone",
      "ModelReplacement": "$1 $2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(myTab[^;/]*) Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Mytab",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(NABI2?-)([^;/]+) Build/",
      "Flags": "",
      "DeviceReplacement": "$1$2",
      "BrandReplacement": "Nabi",
      "ModelReplacement": "$2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(N-\\d+[CDE]) Build/",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Nec",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; ?(NEC-)(.*) Build/",
      "Flags": "",
      "DeviceReplacement": "$1$2",
      "BrandReplacement": "Nec",
      "ModelReplacement": "$2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(LT-NA7) Build/",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Nec",
      "ModelReplacement": "Lifetouch Note",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(NXM\\d+[A-z0-9_]*|Next\\d[A-z0-9_ \\-]*|NEXT\\d[A-z0-9_ \\-]*|Nextbook [A-z0-9_ ]*|DATAM803HC|M805)(?: Build|[\\);])",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Nextbook",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(Nokia)([ _\\-]*)([^;/]*) Build",
      "Flags": "i",
      "DeviceReplacement": "$1$2$3",
      "BrandReplacement": "Nokia",
      "ModelReplacement": "$3",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(Nook ?|Barnes \u0026 Noble Nook |BN )([^;/]+) Build",
      "Flags": "",
      "DeviceReplacement": "$1$2",
      "BrandReplacement": "Nook",
      "ModelReplacement": "$2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(NOOK )?(BNRV200|BNRV200A|BNTV250|BNTV250A|BNTV400|BNTV600|LogicPD Zoom2) Build",
      "Flags": "",
      "DeviceReplacement": "$1$2",
      "BrandReplacement": "Nook",
      "ModelReplacement": "$2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; Build/(Nook)",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Nook",
      "ModelReplacement": "Tablet",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(OP110|OliPad[^;/]+) Build",
      "Flags": "",
      "DeviceReplacement": "Olivetti $1",
      "BrandReplacement": "Olivetti",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *OMEGA[ _\\-](MID[^;/]+) Build",
      "Flags": "",
      "DeviceReplacement": "Omega $1",
      "BrandReplacement": "Omega",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "^(MID7500|MID\\d+) Mozilla/5\\.0 \\(iPad;",
      "Flags": "",
      "DeviceReplacement": "Omega $1",
      "BrandReplacement": "Omega",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *((?:CIUS|cius)[^;/]*) Build",
      "Flags": "",
      "DeviceReplacement": "Openpeak $1",
      "BrandReplacement": "Openpeak",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(Find ?(?:5|7a)|R8[012]\\d{1,2}|T703\\d{0,1}|U70\\d{1,2}T?|X90\\d{1,2}) Build",
      "Flags": "",
      "DeviceReplacement": "Oppo $1",
      "BrandReplacement": "Oppo",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *OPPO ?([^;/]+) Build/",
      "Flags": "",
      "DeviceReplacement": "Oppo $1",
      "BrandReplacement": "Oppo",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(?:Odys\\-|ODYS\\-|ODYS )([^;/]+) Build",
      "Flags": "",
      "DeviceReplacement": "Odys $1",
      "BrandReplacement": "Odys",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(SELECT) ?(7) Build",
      "Flags": "",
      "DeviceReplacement": "Odys $1 $2",
      "BrandReplacement": "Odys",
      "ModelReplacement": "$1 $2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(PEDI)_(PLUS)_(W) Build",
      "Flags": "",
      "DeviceReplacement": "Odys $1 $2 $3",
      "BrandReplacement": "Odys",
      "ModelReplacement": "$1 $2 $3",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(AEON|BRAVIO|FUSION|FUSION2IN1|Genio|EOS10|IEOS[^;/]*|IRON|Loox|LOOX|LOOX Plus|Motion|NOON|NOON_PRO|NEXT|OPOS|PEDI[^;/]*|PRIME[^;/]*|STUDYTAB|TABLO|Tablet-PC-4|UNO_X8|XELIO[^;/]*|Xelio ?\\d+ ?[Pp]ro|XENO10|XPRESS PRO) Build",
      "Flags": "",
      "DeviceReplacement": "Odys $1",
      "BrandReplacement": "Odys",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(TP-\\d+) Build/",
      "Flags": "",
      "DeviceReplacement": "Orion $1",
      "BrandReplacement": "Orion",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(G100W?) Build/",
      "Flags": "",
      "DeviceReplacement": "PackardBell $1",
      "BrandReplacement": "PackardBell",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(Panasonic)[_ ]([^;/]+) Build",
      "Flags": "",
      "DeviceReplacement": "$1 $2",
      "BrandReplacement": "$1",
      "ModelReplacement": "$2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(FZ-A1B|JT-B1) Build",
      "Flags": "",
      "DeviceReplacement": "Panasonic $1",
      "BrandReplacement": "Panasonic",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(dL1|DL1) Build",
      "Flags": "",
      "DeviceReplacement": "Panasonic $1",
      "BrandReplacement": "Panasonic",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(SKY[ _])?(IM\\-[AT]\\d{3}[^;/]+).* Build/",
      "Flags": "",
      "DeviceReplacement": "Pantech $1$2",
      "BrandReplacement": "Pantech",
      "ModelReplacement": "$1$2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *((?:ADR8995|ADR910L|ADR930L|ADR930VW|PTL21|P8000)(?: 4G)?) Build/",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Pantech",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *Pantech([^;/]+).* Build/",
      "Flags": "",
      "DeviceReplacement": "Pantech $1",
      "BrandReplacement": "Pantech",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(papyre)[ _\\-]([^;/]+) Build/",
      "Flags": "i",
      "DeviceReplacement": "$1 $2",
      "BrandReplacement": "Papyre",
      "ModelReplacement": "$2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(?:Touchlet )?(X10\\.[^;/]+) Build/",
      "Flags": "",
      "DeviceReplacement": "Pearl $1",
      "BrandReplacement": "Pearl",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; PHICOMM (i800) Build/",
      "Flags": "",
      "DeviceReplacement": "Phicomm $1",
      "BrandReplacement": "Phicomm",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; PHICOMM ([^;/]+) Build/",
      "Flags": "",
      "DeviceReplacement": "Phicomm $1",
      "BrandReplacement": "Phicomm",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(FWS\\d{3}[^;/]+) Build/",
      "Flags": "",
      "DeviceReplacement": "Phicomm $1",
      "BrandReplacement": "Phicomm",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(D633|D822|D833|T539|T939|V726|W335|W336|W337|W3568|W536|W5510|W626|W632|W6350|W6360|W6500|W732|W736|W737|W7376|W820|W832|W8355|W8500|W8510|W930) Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Philips",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(?:Philips|PHILIPS)[ _]([^;/]+) Build",
      "Flags": "",
      "DeviceReplacement": "Philips $1",
      "BrandReplacement": "Philips",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "Android 4\\..*; *(M[12356789]|U[12368]|S[123])\\ ?(pro)? Build",
      "Flags": "",
      "DeviceReplacement": "Pipo $1$2",
      "BrandReplacement": "Pipo",
      "ModelReplacement": "$1$2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(MOMO[^;/]+) Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Ployer",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(?:Polaroid[ _])?((?:MIDC\\d{3,}|PMID\\d{2,}|PTAB\\d{3,})[^;/]*)(\\/[^;/]*)? Build/",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Polaroid",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(?:Polaroid )(Tablet) Build/",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Polaroid",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(POMP)[ _\\-](.+?) *(?:Build|[;/\\)])",
      "Flags": "",
      "DeviceReplacement": "$1 $2",
      "BrandReplacement": "Pomp",
      "ModelReplacement": "$2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(TB07STA|TB10STA|TB07FTA|TB10FTA) Build/",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Positivo",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(?:Positivo )?((?:YPY|Ypy)[^;/]+) Build/",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Positivo",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(MOB-[^;/]+) Build/",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "POV",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *POV[ _\\-]([^;/]+) Build/",
      "Flags": "",
      "DeviceReplacement": "POV $1",
      "BrandReplacement": "POV",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *((?:TAB-PLAYTAB|TAB-PROTAB|PROTAB|PlayTabPro|Mobii[ _\\-]|TAB-P)[^;/]*) Build/",
      "Flags": "",
      "DeviceReplacement": "POV $1",
      "BrandReplacement": "POV",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(?:Prestigio )?((?:PAP|PMP)\\d[^;/]+) Build/",
      "Flags": "",
      "DeviceReplacement": "Prestigio $1",
      "BrandReplacement": "Prestigio",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(PLT[0-9]{4}.*) Build/",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Proscan",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(A2|A5|A8|A900)_?(Classic)? Build",
      "Flags": "",
      "DeviceReplacement": "$1 $2",
      "BrandReplacement": "Qmobile",
      "ModelReplacement": "$1 $2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(Q[Mm]obile)_([^_]+)_([^_]+) Build",
      "Flags": "",
      "DeviceReplacement": "Qmobile $2 $3",
      "BrandReplacement": "Qmobile",
      "ModelReplacement": "$2 $3",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(Q\\-?[Mm]obile)[_ ](A[^;/]+) Build",
      "Flags": "",
      "DeviceReplacement": "Qmobile $2",
      "BrandReplacement": "Qmobile",
      "ModelReplacement": "$2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(Q\\-Smart)[ _]([^;/]+) Build/",
      "Flags": "",
      "DeviceReplacement": "$1 $2",
      "BrandReplacement": "Qmobilevn",
      "ModelReplacement": "$2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(Q\\-?[Mm]obile)[ _\\-](S[^;/]+) Build/",
      "Flags": "",
      "DeviceReplacement": "$1 $2",
      "BrandReplacement": "Qmobilevn",
      "ModelReplacement": "$2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(TA1013) Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Quanta",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(RK\\d+),? Build/",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Rockchip",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": " Build/(RK\\d+)",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Rockchip",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(SAMSUNG |Samsung )?((?:Galaxy (?:Note II|S\\d)|GT-I9082|GT-I9205|GT-N7\\d{3}|SM-N9005)[^;/]*)\\/?[^;/]* Build/",
      "Flags": "",
      "DeviceReplacement": "Samsung $1$2",
      "BrandReplacement": "Samsung",
      "ModelReplacement": "$2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(Google )?(Nexus [Ss](?: 4G)?) Build/",
      "Flags": "",
      "DeviceReplacement": "Samsung $1$2",
      "BrandReplacement": "Samsung",
      "ModelReplacement": "$2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(SAMSUNG |Samsung )([^\\/]*)\\/[^ ]* Build/",
      "Flags": "",
      "DeviceReplacement": "Samsung $2",
      "BrandReplacement": "Samsung",
      "ModelReplacement": "$2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(Galaxy(?: Ace| Nexus| S ?II+|Nexus S| with MCR 1.2| Mini Plus 4G)?) Build/",
      "Flags": "",
      "DeviceReplacement": "Samsung $1",
      "BrandReplacement": "Samsung",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(SAMSUNG[ _\\-] *)+([^;/]+) Build",
      "Flags": "",
      "DeviceReplacement": "Samsung $2",
      "BrandReplacement": "Samsung",
      "ModelReplacement": "$2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(SAMSUNG-)?(GT\\-[BINPS]\\d{4}[^\\/]*)(\\/[^ ]*) Build",
      "Flags": "",
      "DeviceReplacement": "Samsung $1$2$3",
      "BrandReplacement": "Samsung",
      "ModelReplacement": "$2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(?:; *|^)((?:GT\\-[BIiNPS]\\d{4}|I9\\d{2}0[A-Za-z\\+]?\\b)[^;/\\)]*?)(?:Build|Linux|MIUI|[;/\\)])",
      "Flags": "",
      "DeviceReplacement": "Samsung $1",
      "BrandReplacement": "Samsung",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; (SAMSUNG-)([A-Za-z0-9\\-]+).* Build/",
      "Flags": "",
      "DeviceReplacement": "Samsung $1$2",
      "BrandReplacement": "Samsung",
      "ModelReplacement": "$2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *((?:SCH|SGH|SHV|SHW|SPH|SC|SM)\\-[A-Za-z0-9 ]+)(/?[^ ]*)? Build",
      "Flags": "",
      "DeviceReplacement": "Samsung $1",
      "BrandReplacement": "Samsung",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": " ((?:SCH)\\-[A-Za-z0-9 ]+)(/?[^ ]*)? Build",
      "Flags": "",
      "DeviceReplacement": "Samsung $1",
      "BrandReplacement": "Samsung",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(Behold ?(?:2|II)|YP\\-G[^;/]+|EK-GC100|SCL21|I9300) Build",
      "Flags": "",
      "DeviceReplacement": "Samsung $1",
      "BrandReplacement": "Samsung",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(SH\\-?\\d\\d[^;/]+|SBM\\d[^;/]+) Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Sharp",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(SHARP[ -])([^;/]+) Build",
      "Flags": "",
      "DeviceReplacement": "$1$2",
      "BrandReplacement": "Sharp",
      "ModelReplacement": "$2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(SPX[_\\-]\\d[^;/]*) Build/",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Simvalley",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(SX7\\-PEARL\\.GmbH) Build/",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Simvalley",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(SP[T]?\\-\\d{2}[^;/]*) Build/",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Simvalley",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(SK\\-.*) Build/",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "SKtelesys",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(?:SKYTEX|SX)-([^;/]+) Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Skytex",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(IMAGINE [^;/]+) Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Skytex",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(SmartQ) ?([^;/]+) Build/",
      "Flags": "",
      "DeviceReplacement": "$1 $2",
      "BrandReplacement": "$1",
      "ModelReplacement": "$2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(WF7C|WF10C|SBT[^;/]+) Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Smartbitt",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(SBM(?:003SH|005SH|006SH|007SH|102SH)) Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Sharp",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(003P|101P|101P11C|102P) Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Panasonic",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(00\\dZ) Build/",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "ZTE",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; HTC(X06HT) Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "HTC",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(001HT|X06HT) Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "HTC",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(201M) Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Motorola",
      "ModelReplacement": "XT902",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(ST\\d{4}.*)Build/ST",
      "Flags": "",
      "DeviceReplacement": "Trekstor $1",
      "BrandReplacement": "Trekstor",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(ST\\d{4}.*) Build/",
      "Flags": "",
      "DeviceReplacement": "Trekstor $1",
      "BrandReplacement": "Trekstor",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(Sony ?Ericsson ?)([^;/]+) Build",
      "Flags": "",
      "DeviceReplacement": "$1$2",
      "BrandReplacement": "SonyEricsson",
      "ModelReplacement": "$2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *((?:SK|ST|E|X|LT|MK|MT|WT)\\d{2}[a-z0-9]*(?:-o)?|R800i|U20i) Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "SonyEricsson",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(Xperia (?:A8|Arc|Acro|Active|Live with Walkman|Mini|Neo|Play|Pro|Ray|X\\d+)[^;/]*) Build",
      "Flags": "i",
      "DeviceReplacement": "$1",
      "BrandReplacement": "SonyEricsson",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; Sony (Tablet[^;/]+) Build",
      "Flags": "",
      "DeviceReplacement": "Sony $1",
      "BrandReplacement": "Sony",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; Sony ([^;/]+) Build",
      "Flags": "",
      "DeviceReplacement": "Sony $1",
      "BrandReplacement": "Sony",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(Sony)([A-Za-z0-9\\-]+) Build",
      "Flags": "",
      "DeviceReplacement": "$1 $2",
      "BrandReplacement": "$1",
      "ModelReplacement": "$2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(Xperia [^;/]+) Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Sony",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(C(?:1[0-9]|2[0-9]|53|55|6[0-9])[0-9]{2}|D[25]\\d{3}|D6[56]\\d{2}) Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Sony",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(SGP\\d{3}|SGPT\\d{2}) Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Sony",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(NW-Z1000Series) Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Sony",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "PLAYSTATION 3",
      "Flags": "",
      "DeviceReplacement": "PlayStation 3",
      "BrandReplacement": "Sony",
      "ModelReplacement": "PlayStation 3",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(PlayStation (?:Portable|Vita|\\d+))",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Sony",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *((?:CSL_Spice|Spice|SPICE|CSL)[ _\\-]?)?([Mm][Ii])([ _\\-])?(\\d{3}[^;/]*) Build/",
      "Flags": "",
      "DeviceReplacement": "$1$2$3$4",
      "BrandReplacement": "Spice",
      "ModelReplacement": "Mi$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(Sprint )(.+?) *(?:Build|[;/])",
      "Flags": "",
      "DeviceReplacement": "$1$2",
      "BrandReplacement": "Sprint",
      "ModelReplacement": "$2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "\\b(Sprint)[: ]([^;,/ ]+)",
      "Flags": "",
      "DeviceReplacement": "$1$2",
      "BrandReplacement": "Sprint",
      "ModelReplacement": "$2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(TAGI[ ]?)(MID) ?([^;/]+) Build/",
      "Flags": "",
      "DeviceReplacement": "$1$2$3",
      "BrandReplacement": "Tagi",
      "ModelReplacement": "$2$3",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(Oyster500|Opal 800) Build",
      "Flags": "",
      "DeviceReplacement": "Tecmobile $1",
      "BrandReplacement": "Tecmobile",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(TECNO[ _])([^;/]+) Build/",
      "Flags": "",
      "DeviceReplacement": "$1$2",
      "BrandReplacement": "Tecno",
      "ModelReplacement": "$2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *Android for (Telechips|Techvision) ([^ ]+) ",
      "Flags": "i",
      "DeviceReplacement": "$1 $2",
      "BrandReplacement": "$1",
      "ModelReplacement": "$2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(T-Hub2) Build/",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Telstra",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(PAD) ?(100[12]) Build/",
      "Flags": "",
      "DeviceReplacement": "Terra $1$2",
      "BrandReplacement": "Terra",
      "ModelReplacement": "$1$2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(T[BM]-\\d{3}[^;/]+) Build/",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Texet",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(tolino [^;/]+) Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Thalia",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *Build/.* (TOLINO_BROWSER)",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Thalia",
      "ModelReplacement": "Tolino Shine",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(?:CJ[ -])?(ThL|THL)[ -]([^;/]+) Build/",
      "Flags": "",
      "DeviceReplacement": "$1 $2",
      "BrandReplacement": "Thl",
      "ModelReplacement": "$2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(T100|T200|T5|W100|W200|W8s) Build/",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Thl",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(T-Mobile[ _]G2[ _]Touch) Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "HTC",
      "ModelReplacement": "Hero",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(T-Mobile[ _]G2) Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "HTC",
      "ModelReplacement": "Desire Z",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(T-Mobile myTouch Q) Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Huawei",
      "ModelReplacement": "U8730",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(T-Mobile myTouch) Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Huawei",
      "ModelReplacement": "U8680",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(T-Mobile_Espresso) Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "HTC",
      "ModelReplacement": "Espresso",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(T-Mobile G1) Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "HTC",
      "ModelReplacement": "Dream",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "\\b(T-Mobile ?)?(myTouch)[ _]?([34]G)[ _]?([^\\/]*) (?:Mozilla|Build)",
      "Flags": "",
      "DeviceReplacement": "$1$2 $3 $4",
      "BrandReplacement": "HTC",
      "ModelReplacement": "$2 $3 $4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "\\b(T-Mobile)_([^_]+)_(.*) Build",
      "Flags": "",
      "DeviceReplacement": "$1 $2 $3",
      "BrandReplacement": "Tmobile",
      "ModelReplacement": "$2 $3",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "\\b(T-Mobile)[_ ]?(.*?)Build",
      "Flags": "",
      "DeviceReplacement": "$1 $2",
      "BrandReplacement": "Tmobile",
      "ModelReplacement": "$2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": " (ATP[0-9]{4}) Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Tomtec",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": " *(TOOKY)[ _\\-]([^;/]+) ?(?:Build|;)",
      "Flags": "i",
      "DeviceReplacement": "$1 $2",
      "BrandReplacement": "Tooky",
      "ModelReplacement": "$2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "\\b(TOSHIBA_AC_AND_AZ|TOSHIBA_FOLIO_AND_A|FOLIO_AND_A)",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Toshiba",
      "ModelReplacement": "Folio 100",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *([Ff]olio ?100) Build/",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Toshiba",
      "ModelReplacement": "Folio 100",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(AT[0-9]{2,3}(?:\\-A|LE\\-A|PE\\-A|SE|a)?|AT7-A|AT1S0|Hikari-iFrame/WDPF-[^;/]+|THRiVE|Thrive) Build/",
      "Flags": "",
      "DeviceReplacement": "Toshiba $1",
      "BrandReplacement": "Toshiba",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(TM-MID\\d+[^;/]+|TOUCHMATE|MID-750) Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Touchmate",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(TM-SM\\d+[^;/]+) Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Touchmate",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(A10 [Bb]asic2?) Build/",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Treq",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(TREQ[ _\\-])([^;/]+) Build",
      "Flags": "i",
      "DeviceReplacement": "$1$2",
      "BrandReplacement": "Treq",
      "ModelReplacement": "$2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(X-?5|X-?3) Build/",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Umeox",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(A502\\+?|A936|A603|X1|X2) Build/",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Umeox",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(TOUCH(?:TAB|PAD).+?) Build/",
      "Flags": "i",
      "DeviceReplacement": "Versus $1",
      "BrandReplacement": "Versus",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(VERTU) ([^;/]+) Build/",
      "Flags": "",
      "DeviceReplacement": "$1 $2",
      "BrandReplacement": "Vertu",
      "ModelReplacement": "$2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(Videocon)[ _\\-]([^;/]+) *(?:Build|;)",
      "Flags": "",
      "DeviceReplacement": "$1 $2",
      "BrandReplacement": "Videocon",
      "ModelReplacement": "$2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": " (VT\\d{2}[A-Za-z]*) Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Videocon",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *((?:ViewPad|ViewPhone|VSD)[^;/]+) Build/",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Viewsonic",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(ViewSonic-)([^;/]+) Build/",
      "Flags": "",
      "DeviceReplacement": "$1$2",
      "BrandReplacement": "Viewsonic",
      "ModelReplacement": "$2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(GTablet.*) Build/",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Viewsonic",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *([Vv]ivo)[ _]([^;/]+) Build",
      "Flags": "",
      "DeviceReplacement": "$1 $2",
      "BrandReplacement": "vivo",
      "ModelReplacement": "$2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Vodafone) (.*) Build/",
      "Flags": "",
      "DeviceReplacement": "$1 $2",
      "BrandReplacement": "$1",
      "ModelReplacement": "$2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(?:Walton[ _\\-])?(Primo[ _\\-][^;/]+) Build",
      "Flags": "i",
      "DeviceReplacement": "Walton $1",
      "BrandReplacement": "Walton",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(?:WIKO[ \\-])?(CINK\\+?|BARRY|BLOOM|DARKFULL|DARKMOON|DARKNIGHT|DARKSIDE|FIZZ|HIGHWAY|IGGY|OZZY|RAINBOW|STAIRWAY|SUBLIM|WAX|CINK [^;/]+) Build/",
      "Flags": "i",
      "DeviceReplacement": "Wiko $1",
      "BrandReplacement": "Wiko",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *WellcoM-([^;/]+) Build",
      "Flags": "",
      "DeviceReplacement": "Wellcom $1",
      "BrandReplacement": "Wellcom",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(?:(WeTab)-Browser|; (wetab) Build)",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "WeTab",
      "ModelReplacement": "WeTab",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(AT-AS[^;/]+) Build",
      "Flags": "",
      "DeviceReplacement": "Wolfgang $1",
      "BrandReplacement": "Wolfgang",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(?:Woxter|Wxt) ([^;/]+) Build",
      "Flags": "",
      "DeviceReplacement": "Woxter $1",
      "BrandReplacement": "Woxter",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(?:Xenta |Luna )?(TAB[234][0-9]{2}|TAB0[78]-\\d{3}|TAB0?9-\\d{3}|TAB1[03]-\\d{3}|SMP\\d{2}-\\d{3}) Build/",
      "Flags": "",
      "DeviceReplacement": "Yarvik $1",
      "BrandReplacement": "Yarvik",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *([A-Z]{2,4})(M\\d{3,}[A-Z]{2})([^;\\)\\/]*)(?: Build|[;\\)])",
      "Flags": "",
      "DeviceReplacement": "Yifang $1$2$3",
      "BrandReplacement": "Yifang",
      "ModelReplacement": "$2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *((MI|HM|MI-ONE|Redmi)[ -](NOTE |Note )?[^;/]*) (Build|MIUI)/",
      "Flags": "",
      "DeviceReplacement": "XiaoMi $1",
      "BrandReplacement": "XiaoMi",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *XOLO[ _]([^;/]*tab.*) Build",
      "Flags": "i",
      "DeviceReplacement": "Xolo $1",
      "BrandReplacement": "Xolo",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *XOLO[ _]([^;/]+) Build",
      "Flags": "i",
      "DeviceReplacement": "Xolo $1",
      "BrandReplacement": "Xolo",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(q\\d0{2,3}[a-z]?) Build",
      "Flags": "i",
      "DeviceReplacement": "Xolo $1",
      "BrandReplacement": "Xolo",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(PAD ?[79]\\d+[^;/]*|TelePAD\\d+[^;/]) Build",
      "Flags": "",
      "DeviceReplacement": "Xoro $1",
      "BrandReplacement": "Xoro",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(?:(?:ZOPO|Zopo)[ _]([^;/]+)|(ZP ?(?:\\d{2}[^;/]+|C2))|(C[2379])) Build",
      "Flags": "",
      "DeviceReplacement": "$1$2$3",
      "BrandReplacement": "Zopo",
      "ModelReplacement": "$1$2$3",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(ZiiLABS) (Zii[^;/]*) Build",
      "Flags": "",
      "DeviceReplacement": "$1 $2",
      "BrandReplacement": "ZiiLabs",
      "ModelReplacement": "$2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(Zii)_([^;/]*) Build",
      "Flags": "",
      "DeviceReplacement": "$1 $2",
      "BrandReplacement": "ZiiLabs",
      "ModelReplacement": "$2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(ARIZONA|(?:ATLAS|Atlas) W|D930|Grand (?:[SX][^;]*|Era|Memo[^;]*)|JOE|(?:Kis|KIS)\\b[^;]*|Libra|Light [^;]*|N8[056][01]|N850L|N8000|N9[15]\\d{2}|N9810|NX501|Optik|(?:Vip )Racer[^;]*|RacerII|RACERII|San Francisco[^;]*|V9[AC]|V55|V881|Z[679][0-9]{2}[A-z]?) Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "ZTE",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *([A-Z]\\d+)_USA_[^;]* Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "ZTE",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(SmartTab\\d+)[^;]* Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "ZTE",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(?:Blade|BLADE|ZTE-BLADE)([^;/]*) Build",
      "Flags": "",
      "DeviceReplacement": "ZTE Blade$1",
      "BrandReplacement": "ZTE",
      "ModelReplacement": "Blade$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(?:Skate|SKATE|ZTE-SKATE)([^;/]*) Build",
      "Flags": "",
      "DeviceReplacement": "ZTE Skate$1",
      "BrandReplacement": "ZTE",
      "ModelReplacement": "Skate$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(Orange |Optimus )(Monte Carlo|San Francisco) Build",
      "Flags": "",
      "DeviceReplacement": "$1$2",
      "BrandReplacement": "ZTE",
      "ModelReplacement": "$1$2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(?:ZXY-ZTE_|ZTE\\-U |ZTE[\\- _]|ZTE-C[_ ])([^;/]+) Build",
      "Flags": "",
      "DeviceReplacement": "ZTE $1",
      "BrandReplacement": "ZTE",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; (BASE) (lutea|Lutea 2|Tab[^;]*) Build",
      "Flags": "",
      "DeviceReplacement": "$1 $2",
      "BrandReplacement": "ZTE",
      "ModelReplacement": "$1 $2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; (Avea inTouch 2|soft stone|tmn smart a7|Movistar[ _]Link) Build",
      "Flags": "i",
      "DeviceReplacement": "$1",
      "BrandReplacement": "ZTE",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(vp9plus)\\)",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "ZTE",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; ?(Cloud[ _]Z5|z1000|Z99 2G|z99|z930|z999|z990|z909|Z919|z900) Build/",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Zync",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; ?(KFOT|Kindle Fire) Build\\b",
      "Flags": "",
      "DeviceReplacement": "Kindle Fire",
      "BrandReplacement": "Amazon",
      "ModelReplacement": "Kindle Fire",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; ?(KFOTE|Amazon Kindle Fire2) Build\\b",
      "Flags": "",
      "DeviceReplacement": "Kindle Fire 2",
      "BrandReplacement": "Amazon",
      "ModelReplacement": "Kindle Fire 2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; ?(KFTT) Build\\b",
      "Flags": "",
      "DeviceReplacement": "Kindle Fire HD",
      "BrandReplacement": "Amazon",
      "ModelReplacement": "Kindle Fire HD 7\"",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; ?(KFJWI) Build\\b",
      "Flags": "",
      "DeviceReplacement": "Kindle Fire HD 8.9\" WiFi",
      "BrandReplacement": "Amazon",
      "ModelReplacement": "Kindle Fire HD 8.9\" WiFi",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; ?(KFJWA) Build\\b",
      "Flags": "",
      "DeviceReplacement": "Kindle Fire HD 8.9\" 4G",
      "BrandReplacement": "Amazon",
      "ModelReplacement": "Kindle Fire HD 8.9\" 4G",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; ?(KFSOWI) Build\\b",
      "Flags": "",
      "DeviceReplacement": "Kindle Fire HD 7\" WiFi",
      "BrandReplacement": "Amazon",
      "ModelReplacement": "Kindle Fire HD 7\" WiFi",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; ?(KFTHWI) Build\\b",
      "Flags": "",
      "DeviceReplacement": "Kindle Fire HDX 7\" WiFi",
      "BrandReplacement": "Amazon",
      "ModelReplacement": "Kindle Fire HDX 7\" WiFi",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; ?(KFTHWA) Build\\b",
      "Flags": "",
      "DeviceReplacement": "Kindle Fire HDX 7\" 4G",
      "BrandReplacement": "Amazon",
      "ModelReplacement": "Kindle Fire HDX 7\" 4G",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; ?(KFAPWI) Build\\b",
      "Flags": "",
      "DeviceReplacement": "Kindle Fire HDX 8.9\" WiFi",
      "BrandReplacement": "Amazon",
      "ModelReplacement": "Kindle Fire HDX 8.9\" WiFi",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; ?(KFAPWA) Build\\b",
      "Flags": "",
      "DeviceReplacement": "Kindle Fire HDX 8.9\" 4G",
      "BrandReplacement": "Amazon",
      "ModelReplacement": "Kindle Fire HDX 8.9\" 4G",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; ?Amazon ([^;/]+) Build\\b",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Amazon",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; ?(Kindle) Build\\b",
      "Flags": "",
      "DeviceReplacement": "Kindle",
      "BrandReplacement": "Amazon",
      "ModelReplacement": "Kindle",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; ?(Silk)/(\\d+)\\.(\\d+)(?:\\.([0-9\\-]+))? Build\\b",
      "Flags": "",
      "DeviceReplacement": "Kindle Fire",
      "BrandReplacement": "Amazon",
      "ModelReplacement": "Kindle Fire$2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": " (Kindle)/(\\d+\\.\\d+)",
      "Flags": "",
      "DeviceReplacement": "Kindle",
      "BrandReplacement": "Amazon",
      "ModelReplacement": "$1 $2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": " (Silk|Kindle)/(\\d+)\\.",
      "Flags": "",
      "DeviceReplacement": "Kindle",
      "BrandReplacement": "Amazon",
      "ModelReplacement": "Kindle",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(sprd)\\-([^/]+)/",
      "Flags": "",
      "DeviceReplacement": "$1 $2",
      "BrandReplacement": "$1",
      "ModelReplacement": "$2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(H\\d{2}00\\+?) Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Hero",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(iphone|iPhone5) Build/",
      "Flags": "",
      "DeviceReplacement": "Xianghe $1",
      "BrandReplacement": "Xianghe",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; *(e\\d{4}[a-z]?_?v\\d+|v89_[^;/]+)[^;/]+ Build/",
      "Flags": "",
      "DeviceReplacement": "Xianghe $1",
      "BrandReplacement": "Xianghe",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "\\bUSCC[_\\-]?([^ ;/\\)]+)",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Cellular",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "Windows Phone [^;]+; .*?IEMobile/[^;\\)]+[;\\)] ?(?:ARM; ?Touch; ?|Touch; ?)?(?:ALCATEL)[^;]*; *([^;,\\)]+)",
      "Flags": "",
      "DeviceReplacement": "Alcatel $1",
      "BrandReplacement": "Alcatel",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "Windows Phone [^;]+; .*?IEMobile/[^;\\)]+[;\\)] ?(?:ARM; ?Touch; ?|Touch; ?|WpsLondonTest; ?)?(?:ASUS|Asus)[^;]*; *([^;,\\)]+)",
      "Flags": "",
      "DeviceReplacement": "Asus $1",
      "BrandReplacement": "Asus",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "Windows Phone [^;]+; .*?IEMobile/[^;\\)]+[;\\)] ?(?:ARM; ?Touch; ?|Touch; ?)?(?:DELL|Dell)[^;]*; *([^;,\\)]+)",
      "Flags": "",
      "DeviceReplacement": "Dell $1",
      "BrandReplacement": "Dell",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "Windows Phone [^;]+; .*?IEMobile/[^;\\)]+[;\\)] ?(?:ARM; ?Touch; ?|Touch; ?|WpsLondonTest; ?)?(?:HTC|Htc|HTC_blocked[^;]*)[^;]*; *(?:HTC)?([^;,\\)]+)",
      "Flags": "",
      "DeviceReplacement": "HTC $1",
      "BrandReplacement": "HTC",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "Windows Phone [^;]+; .*?IEMobile/[^;\\)]+[;\\)] ?(?:ARM; ?Touch; ?|Touch; ?)?(?:HUAWEI)[^;]*; *(?:HUAWEI )?([^;,\\)]+)",
      "Flags": "",
      "DeviceReplacement": "Huawei $1",
      "BrandReplacement": "Huawei",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "Windows Phone [^;]+; .*?IEMobile/[^;\\)]+[;\\)] ?(?:ARM; ?Touch; ?|Touch; ?)?(?:LG|Lg)[^;]*; *(?:LG[ \\-])?([^;,\\)]+)",
      "Flags": "",
      "DeviceReplacement": "LG $1",
      "BrandReplacement": "LG",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "Windows Phone [^;]+; .*?IEMobile/[^;\\)]+[;\\)] ?(?:ARM; ?Touch; ?|Touch; ?)?(?:NOKIA|Nokia)[^;]*; *(?:NOKIA ?|Nokia ?|LUMIA ?|[Ll]umia ?)*(\\d{3,}[^;\\)]*)",
      "Flags": "",
      "DeviceReplacement": "Lumia $1",
      "BrandReplacement": "Nokia",
      "ModelReplacement": "Lumia $1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "Windows Phone [^;]+; .*?IEMobile/[^;\\)]+[;\\)] ?(?:ARM; ?Touch; ?|Touch; ?)?(?:NOKIA|Nokia)[^;]*; *(RM-\\d{3,})",
      "Flags": "",
      "DeviceReplacement": "Nokia $1",
      "BrandReplacement": "Nokia",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(?:Windows Phone [^;]+; .*?IEMobile/[^;\\)]+[;\\)]|WPDesktop;) ?(?:ARM; ?Touch; ?|Touch; ?)?(?:NOKIA|Nokia)[^;]*; *(?:NOKIA ?|Nokia ?|LUMIA ?|[Ll]umia ?)*([^;\\)]+)",
      "Flags": "",
      "DeviceReplacement": "Nokia $1",
      "BrandReplacement": "Nokia",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "Windows Phone [^;]+; .*?IEMobile/[^;\\)]+[;\\)] ?(?:ARM; ?Touch; ?|Touch; ?)?(?:Microsoft(?: Corporation)?)[^;]*; *([^;,\\)]+)",
      "Flags": "",
      "DeviceReplacement": "Microsoft $1",
      "BrandReplacement": "Microsoft",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "Windows Phone [^;]+; .*?IEMobile/[^;\\)]+[;\\)] ?(?:ARM; ?Touch; ?|Touch; ?|WpsLondonTest; ?)?(?:SAMSUNG)[^;]*; *(?:SAMSUNG )?([^;,\\.\\)]+)",
      "Flags": "",
      "DeviceReplacement": "Samsung $1",
      "BrandReplacement": "Samsung",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "Windows Phone [^;]+; .*?IEMobile/[^;\\)]+[;\\)] ?(?:ARM; ?Touch; ?|Touch; ?|WpsLondonTest; ?)?(?:TOSHIBA|FujitsuToshibaMobileCommun)[^;]*; *([^;,\\)]+)",
      "Flags": "",
      "DeviceReplacement": "Toshiba $1",
      "BrandReplacement": "Toshiba",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "Windows Phone [^;]+; .*?IEMobile/[^;\\)]+[;\\)] ?(?:ARM; ?Touch; ?|Touch; ?|WpsLondonTest; ?)?([^;]+); *([^;,\\)]+)",
      "Flags": "",
      "DeviceReplacement": "$1 $2",
      "BrandReplacement": "$1",
      "ModelReplacement": "$2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(?:^|; )SAMSUNG\\-([A-Za-z0-9\\-]+).* Bada/",
      "Flags": "",
      "DeviceReplacement": "Samsung $1",
      "BrandReplacement": "Samsung",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "\\(Mobile; ALCATEL ?(One|ONE) ?(Touch|TOUCH) ?([^;/]+)(?:/[^;]+)?; rv:[^\\)]+\\) Gecko/[^\\/]+ Firefox/",
      "Flags": "",
      "DeviceReplacement": "Alcatel $1 $2 $3",
      "BrandReplacement": "Alcatel",
      "ModelReplacement": "One Touch $3",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "\\(Mobile; (?:ZTE([^;]+)|(OpenC)); rv:[^\\)]+\\) Gecko/[^\\/]+ Firefox/",
      "Flags": "",
      "DeviceReplacement": "ZTE $1$2",
      "BrandReplacement": "ZTE",
      "ModelReplacement": "$1$2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "Nokia(N[0-9]+)([A-z_\\-][A-z0-9_\\-]*)",
      "Flags": "",
      "DeviceReplacement": "Nokia $1",
      "BrandReplacement": "Nokia",
      "ModelReplacement": "$1$2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(?:NOKIA|Nokia)(?:\\-| *)(?:([A-Za-z0-9]+)\\-[0-9a-f]{32}|([A-Za-z0-9\\-]+)(?:UCBrowser)|([A-Za-z0-9\\-]+))",
      "Flags": "",
      "DeviceReplacement": "Nokia $1$2$3",
      "BrandReplacement": "Nokia",
      "ModelReplacement": "$1$2$3",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "Lumia ([A-Za-z0-9\\-]+)",
      "Flags": "",
      "DeviceReplacement": "Lumia $1",
      "BrandReplacement": "Nokia",
      "ModelReplacement": "Lumia $1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "\\(Symbian; U; S60 V5; [A-z]{2}\\-[A-z]{2}; (SonyEricsson|Samsung|Nokia|LG)([^;/]+)\\)",
      "Flags": "",
      "DeviceReplacement": "$1 $2",
      "BrandReplacement": "$1",
      "ModelReplacement": "$2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "\\(Symbian(?:/3)?; U; ([^;]+);",
      "Flags": "",
      "DeviceReplacement": "Nokia $1",
      "BrandReplacement": "Nokia",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "BB10; ([A-Za-z0-9\\- ]+)\\)",
      "Flags": "",
      "DeviceReplacement": "BlackBerry $1",
      "BrandReplacement": "BlackBerry",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "Play[Bb]ook.+RIM Tablet OS",
      "Flags": "",
      "DeviceReplacement": "BlackBerry Playbook",
      "BrandReplacement": "BlackBerry",
      "ModelReplacement": "Playbook",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "Black[Bb]erry ([0-9]+);",
      "Flags": "",
      "DeviceReplacement": "BlackBerry $1",
      "BrandReplacement": "BlackBerry",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "Black[Bb]erry([0-9]+)",
      "Flags": "",
      "DeviceReplacement": "BlackBerry $1",
      "BrandReplacement": "BlackBerry",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "Black[Bb]erry;",
      "Flags": "",
      "DeviceReplacement": "BlackBerry",
      "BrandReplacement": "BlackBerry",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Pre|Pixi)/\\d+\\.\\d+",
      "Flags": "",
      "DeviceReplacement": "Palm $1",
      "BrandReplacement": "Palm",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "Palm([0-9]+)",
      "Flags": "",
      "DeviceReplacement": "Palm $1",
      "BrandReplacement": "Palm",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "Treo([A-Za-z0-9]+)",
      "Flags": "",
      "DeviceReplacement": "Palm Treo $1",
      "BrandReplacement": "Palm",
      "ModelReplacement": "Treo $1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "webOS.*(P160U(?:NA)?)/(\\d+).(\\d+)",
      "Flags": "",
      "DeviceReplacement": "HP Veer",
      "BrandReplacement": "HP",
      "ModelReplacement": "Veer",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Touch[Pp]ad)/\\d+\\.\\d+",
      "Flags": "",
      "DeviceReplacement": "HP TouchPad",
      "BrandReplacement": "HP",
      "ModelReplacement": "TouchPad",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "HPiPAQ([A-Za-z0-9]+)/\\d+.\\d+",
      "Flags": "",
      "DeviceReplacement": "HP iPAQ $1",
      "BrandReplacement": "HP",
      "ModelReplacement": "iPAQ $1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "PDA; (PalmOS)/sony/model ([a-z]+)/Revision",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Sony",
      "ModelReplacement": "$1 $2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Apple\\s?TV)",
      "Flags": "",
      "DeviceReplacement": "AppleTV",
      "BrandReplacement": "Apple",
      "ModelReplacement": "AppleTV",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(QtCarBrowser)",
      "Flags": "",
      "DeviceReplacement": "Tesla Model S",
      "BrandReplacement": "Tesla",
      "ModelReplacement": "Model S",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "((?:iPhone|iPad|iPod)\\d+,\\d+)",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Apple",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(iPad)(?:;| Simulator;)",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Apple",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(iPod)(?:;| touch;| Simulator;)",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Apple",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(iPhone)(?:;| Simulator;)",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Apple",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "CFNetwork/.* Darwin/\\d.*\\(((?:Mac|iMac|PowerMac|PowerBook)[^\\d]*)(\\d+)(?:,|%2C)(\\d+)",
      "Flags": "",
      "DeviceReplacement": "$1$2,$3",
      "BrandReplacement": "Apple",
      "ModelReplacement": "$1$2,$3",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "CFNetwork/.* Darwin/\\d",
      "Flags": "",
      "DeviceReplacement": "iOS-Device",
      "BrandReplacement": "Apple",
      "ModelReplacement": "iOS-Device",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "acer_([A-Za-z0-9]+)_",
      "Flags": "",
      "DeviceReplacement": "Acer $1",
      "BrandReplacement": "Acer",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(?:ALCATEL|Alcatel)-([A-Za-z0-9\\-]+)",
      "Flags": "",
      "DeviceReplacement": "Alcatel $1",
      "BrandReplacement": "Alcatel",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(?:Amoi|AMOI)\\-([A-Za-z0-9]+)",
      "Flags": "",
      "DeviceReplacement": "Amoi $1",
      "BrandReplacement": "Amoi",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(?:; |\\/|^)((?:Transformer (?:Pad|Prime) |Transformer |PadFone[ _]?)[A-Za-z0-9]*)",
      "Flags": "",
      "DeviceReplacement": "Asus $1",
      "BrandReplacement": "Asus",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(?:asus.*?ASUS|Asus|ASUS|asus)[\\- ;]*((?:Transformer (?:Pad|Prime) |Transformer |Padfone |Nexus[ _])?[A-Za-z0-9]+)",
      "Flags": "",
      "DeviceReplacement": "Asus $1",
      "BrandReplacement": "Asus",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "\\bBIRD[ \\-\\.]([A-Za-z0-9]+)",
      "Flags": "",
      "DeviceReplacement": "Bird $1",
      "BrandReplacement": "Bird",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "\\bDell ([A-Za-z0-9]+)",
      "Flags": "",
      "DeviceReplacement": "Dell $1",
      "BrandReplacement": "Dell",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "DoCoMo/2\\.0 ([A-Za-z0-9]+)",
      "Flags": "",
      "DeviceReplacement": "DoCoMo $1",
      "BrandReplacement": "DoCoMo",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "([A-Za-z0-9]+)_W;FOMA",
      "Flags": "",
      "DeviceReplacement": "DoCoMo $1",
      "BrandReplacement": "DoCoMo",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "([A-Za-z0-9]+);FOMA",
      "Flags": "",
      "DeviceReplacement": "DoCoMo $1",
      "BrandReplacement": "DoCoMo",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "\\b(?:HTC/|HTC/[a-z0-9]+/)?HTC[ _\\-;]? *(.*?)(?:-?Mozilla|fingerPrint|[;/\\(\\)]|$)",
      "Flags": "",
      "DeviceReplacement": "HTC $1",
      "BrandReplacement": "HTC",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "Huawei([A-Za-z0-9]+)",
      "Flags": "",
      "DeviceReplacement": "Huawei $1",
      "BrandReplacement": "Huawei",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "HUAWEI-([A-Za-z0-9]+)",
      "Flags": "",
      "DeviceReplacement": "Huawei $1",
      "BrandReplacement": "Huawei",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "vodafone([A-Za-z0-9]+)",
      "Flags": "",
      "DeviceReplacement": "Huawei Vodafone $1",
      "BrandReplacement": "Huawei",
      "ModelReplacement": "Vodafone $1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "i\\-mate ([A-Za-z0-9]+)",
      "Flags": "",
      "DeviceReplacement": "i-mate $1",
      "BrandReplacement": "i-mate",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "Kyocera\\-([A-Za-z0-9]+)",
      "Flags": "",
      "DeviceReplacement": "Kyocera $1",
      "BrandReplacement": "Kyocera",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "KWC\\-([A-Za-z0-9]+)",
      "Flags": "",
      "DeviceReplacement": "Kyocera $1",
      "BrandReplacement": "Kyocera",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "Lenovo[_\\-]([A-Za-z0-9]+)",
      "Flags": "",
      "DeviceReplacement": "Lenovo $1",
      "BrandReplacement": "Lenovo",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(HbbTV)/[0-9]+\\.[0-9]+\\.[0-9]+ \\([^;]*; *(LG)E *; *([^;]*) *;[^;]*;[^;]*;\\)",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "$2",
      "ModelReplacement": "$3",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(HbbTV)/1\\.1\\.1.*CE-HTML/1\\.\\d;(Vendor/)*(THOM[^;]*?)[;\\s](?:.*SW-Version/.*)*(LF[^;]+);?",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Thomson",
      "ModelReplacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(HbbTV)(?:/1\\.1\\.1)?(?: ?\\(;;;;;\\))?; *CE-HTML(?:/1\\.\\d)?; *([^ ]+) ([^;]+);",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "$2",
      "ModelReplacement": "$3",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(HbbTV)/1\\.1\\.1 \\(;;;;;\\) Maple_2011",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Samsung",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(HbbTV)/[0-9]+\\.[0-9]+\\.[0-9]+ \\([^;]*; *(?:CUS:([^;]*)|([^;]+)) *; *([^;]*) *;.*;",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "$2$3",
      "ModelReplacement": "$4",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(HbbTV)/[0-9]+\\.[0-9]+\\.[0-9]+",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "LGE; (?:Media\\/)?([^;]*);[^;]*;[^;]*;?\\); \"?LG NetCast(\\.TV|\\.Media|)-\\d+",
      "Flags": "",
      "DeviceReplacement": "NetCast$2",
      "BrandReplacement": "LG",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "InettvBrowser/[0-9]+\\.[0-9A-Z]+ \\([^;]*;(Sony)([^;]*);[^;]*;[^\\)]*\\)",
      "Flags": "",
      "DeviceReplacement": "Inettv",
      "BrandReplacement": "$1",
      "ModelReplacement": "$2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "InettvBrowser/[0-9]+\\.[0-9A-Z]+ \\([^;]*;([^;]*);[^;]*;[^\\)]*\\)",
      "Flags": "",
      "DeviceReplacement": "Inettv",
      "BrandReplacement": "Generic_Inettv",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(?:InettvBrowser|TSBNetTV|NETTV|HBBTV)",
      "Flags": "",
      "DeviceReplacement": "Inettv",
      "BrandReplacement": "Generic_Inettv",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "Series60/\\d\\.\\d (LG)[\\-]?([A-Za-z0-9 \\-]+)",
      "Flags": "",
      "DeviceReplacement": "$1 $2",
      "BrandReplacement": "$1",
      "ModelReplacement": "$2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "\\b(?:LGE[ \\-]LG\\-(?:AX)?|LGE |LGE?-LG|LGE?[ \\-]|LG[ /\\-]|lg[\\-])([A-Za-z0-9]+)\\b",
      "Flags": "",
      "DeviceReplacement": "LG $1",
      "BrandReplacement": "LG",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(?:^LG[\\-]?|^LGE[\\-/]?)([A-Za-z]+[0-9]+[A-Za-z]*)",
      "Flags": "",
      "DeviceReplacement": "LG $1",
      "BrandReplacement": "LG",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "^LG([0-9]+[A-Za-z]*)",
      "Flags": "",
      "DeviceReplacement": "LG $1",
      "BrandReplacement": "LG",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(KIN\\.[^ ]+) (\\d+)\\.(\\d+)",
      "Flags": "",
      "DeviceReplacement": "Microsoft $1",
      "BrandReplacement": "Microsoft",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(?:MSIE|XBMC).*\\b(Xbox)\\b",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Microsoft",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "; ARM; Trident/6\\.0; Touch[\\);]",
      "Flags": "",
      "DeviceReplacement": "Microsoft Surface RT",
      "BrandReplacement": "Microsoft",
      "ModelReplacement": "Surface RT",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "Motorola\\-([A-Za-z0-9]+)",
      "Flags": "",
      "DeviceReplacement": "Motorola $1",
      "BrandReplacement": "Motorola",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "MOTO\\-([A-Za-z0-9]+)",
      "Flags": "",
      "DeviceReplacement": "Motorola $1",
      "BrandReplacement": "Motorola",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "MOT\\-([A-z0-9][A-z0-9\\-]*)",
      "Flags": "",
      "DeviceReplacement": "Motorola $1",
      "BrandReplacement": "Motorola",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "Nintendo WiiU",
      "Flags": "",
      "DeviceReplacement": "Nintendo Wii U",
      "BrandReplacement": "Nintendo",
      "ModelReplacement": "Wii U",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "Nintendo (DS|3DS|DSi|Wii);",
      "Flags": "",
      "DeviceReplacement": "Nintendo $1",
      "BrandReplacement": "Nintendo",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(?:Pantech|PANTECH)[ _-]?([A-Za-z0-9\\-]+)",
      "Flags": "",
      "DeviceReplacement": "Pantech $1",
      "BrandReplacement": "Pantech",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "Philips([A-Za-z0-9]+)",
      "Flags": "",
      "DeviceReplacement": "Philips $1",
      "BrandReplacement": "Philips",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "Philips ([A-Za-z0-9]+)",
      "Flags": "",
      "DeviceReplacement": "Philips $1",
      "BrandReplacement": "Philips",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "SymbianOS/9\\.\\d.* Samsung[/\\-]([A-Za-z0-9 \\-]+)",
      "Flags": "",
      "DeviceReplacement": "Samsung $1",
      "BrandReplacement": "Samsung",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Samsung)(SGH)(i[0-9]+)",
      "Flags": "",
      "DeviceReplacement": "$1 $2$3",
      "BrandReplacement": "$1",
      "ModelReplacement": "$2-$3",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "SAMSUNG-ANDROID-MMS/([^;/]+)",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Samsung",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "SAMSUNG(?:; |[ -/])([A-Za-z0-9\\-]+)",
      "Flags": "i",
      "DeviceReplacement": "Samsung $1",
      "BrandReplacement": "Samsung",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Dreamcast)",
      "Flags": "",
      "DeviceReplacement": "Sega $1",
      "BrandReplacement": "Sega",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "^SIE-([A-Za-z0-9]+)",
      "Flags": "",
      "DeviceReplacement": "Siemens $1",
      "BrandReplacement": "Siemens",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "Softbank/[12]\\.0/([A-Za-z0-9]+)",
      "Flags": "",
      "DeviceReplacement": "Softbank $1",
      "BrandReplacement": "Softbank",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "SonyEricsson ?([A-Za-z0-9\\-]+)",
      "Flags": "",
      "DeviceReplacement": "Ericsson $1",
      "BrandReplacement": "SonyEricsson",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "Android [^;]+; ([^ ]+) (Sony)/",
      "Flags": "",
      "DeviceReplacement": "$2 $1",
      "BrandReplacement": "$2",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Sony)(?:BDP\\/|\\/)?([^ /;\\)]+)[ /;\\)]",
      "Flags": "",
      "DeviceReplacement": "$1 $2",
      "BrandReplacement": "$1",
      "ModelReplacement": "$2",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "Puffin/[\\d\\.]+IT",
      "Flags": "",
      "DeviceReplacement": "iPad",
      "BrandReplacement": "Apple",
      "ModelReplacement": "iPad",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "Puffin/[\\d\\.]+IP",
      "Flags": "",
      "DeviceReplacement": "iPhone",
      "BrandReplacement": "Apple",
      "ModelReplacement": "iPhone",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "Puffin/[\\d\\.]+AT",
      "Flags": "",
      "DeviceReplacement": "Generic Tablet",
      "BrandReplacement": "Generic",
      "ModelReplacement": "Tablet",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "Puffin/[\\d\\.]+AP",
      "Flags": "",
      "DeviceReplacement": "Generic Smartphone",
      "BrandReplacement": "Generic",
      "ModelReplacement": "Smartphone",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "Android[\\- ][\\d]+\\.[\\d]+; [A-Za-z]{2}\\-[A-Za-z]{0,2}; WOWMobile (.+) Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Generic_Android",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "Android[\\- ][\\d]+\\.[\\d]+\\-update1; [A-Za-z]{2}\\-[A-Za-z]{0,2} *; *(.+?) Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Generic_Android",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "Android[\\- ][\\d]+(?:\\.[\\d]+){1,2}; *[A-Za-z]{2}[_\\-][A-Za-z]{0,2}\\-? *; *(.+?) Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Generic_Android",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "Android[\\- ][\\d]+(?:\\.[\\d]+){1,2}; *[A-Za-z]{0,2}\\- *; *(.+?) Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Generic_Android",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "Android[\\- ][\\d]+(?:\\.[\\d]+){1,2}; *[a-z]{0,2}[_\\-]?[A-Za-z]{0,2};? Build",
      "Flags": "",
      "DeviceReplacement": "Generic Smartphone",
      "BrandReplacement": "Generic",
      "ModelReplacement": "Smartphone",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "Android[\\- ][\\d]+(?:\\.[\\d]+){1,2}; *\\-?[A-Za-z]{2}; *(.+?) Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Generic_Android",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "Android[\\- ][\\d]+(?:\\.[\\d]+){1,2}(?:;.*)?; *(.+?) Build",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Generic_Android",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(GoogleTV)",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Generic_Inettv",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(WebTV)/\\d+.\\d+",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Generic_Inettv",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "^(Roku)/DVP-\\d+\\.\\d+",
      "Flags": "",
      "DeviceReplacement": "$1",
      "BrandReplacement": "Generic_Inettv",
      "ModelReplacement": "$1",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Android 3\\.\\d|Opera Tablet|Tablet; .+Firefox/|Android.*(?:Tab|Pad))",
      "Flags": "i",
      "DeviceReplacement": "Generic Tablet",
      "BrandReplacement": "Generic",
      "ModelReplacement": "Tablet",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(Symbian|\\bS60(Version|V\\d)|\\bS60\\b|\\((Series 60|Windows Mobile|Palm OS|Bada); Opera Mini|Windows CE|Opera Mobi|BREW|Brew|Mobile; .+Firefox/|iPhone OS|Android|MobileSafari|Windows *Phone|\\(webOS/|PalmOS)",
      "Flags": "",
      "DeviceReplacement": "Generic Smartphone",
      "BrandReplacement": "Generic",
      "ModelReplacement": "Smartphone",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(hiptop|avantgo|plucker|xiino|blazer|elaine)",
      "Flags": "i",
      "DeviceReplacement": "Generic Smartphone",
      "BrandReplacement": "Generic",
      "ModelReplacement": "Smartphone",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(bot|zao|borg|DBot|oegp|silk|Xenu|zeal|^NING|CCBot|crawl|htdig|lycos|slurp|teoma|voila|yahoo|Sogou|CiBra|Nutch|^Java/|^JNLP/|Daumoa|Genieo|ichiro|larbin|pompos|Scrapy|snappy|speedy|spider|msnbot|msrbot|vortex|^vortex|crawler|favicon|indexer|Riddler|scooter|scraper|scrubby|WhatWeb|WinHTTP|bingbot|openbot|gigabot|furlbot|polybot|seekbot|^voyager|archiver|Icarus6j|mogimogi|Netvibes|blitzbot|altavista|charlotte|findlinks|Retreiver|TLSProber|WordPress|SeznamBot|ProoXiBot|wsr\\-agent|Squrl Java|EtaoSpider|PaperLiBot|SputnikBot|A6\\-Indexer|netresearch|searchsight|baiduspider|YisouSpider|ICC\\-Crawler|http%20client|Python-urllib|dataparksearch|converacrawler|Screaming Frog|AppEngine-Google|YahooCacheSystem|fast\\-webcrawler|Sogou Pic Spider|semanticdiscovery|Innovazion Crawler|facebookexternalhit|Google.*/\\+/web/snippet|Google-HTTP-Java-Client|BlogBridge|IlTrovatore-Setaccio|InternetArchive|GomezAgent|WebThumbnail|heritrix|NewsGator|PagePeeker|Reaper|ZooShot|holmes|NL-Crawler)",
      "Flags": "i",
      "DeviceReplacement": "Spider",
      "BrandReplacement": "Spider",
      "ModelReplacement": "Desktop",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "^(1207|3gso|4thp|501i|502i|503i|504i|505i|506i|6310|6590|770s|802s|a wa|acer|acs\\-|airn|alav|asus|attw|au\\-m|aur |aus |abac|acoo|aiko|alco|alca|amoi|anex|anny|anyw|aptu|arch|argo|bmobile|bell|bird|bw\\-n|bw\\-u|beck|benq|bilb|blac|c55/|cdm\\-|chtm|capi|comp|cond|dall|dbte|dc\\-s|dica|ds\\-d|ds12|dait|devi|dmob|doco|dopo|dorado|el(?:38|39|48|49|50|55|58|68)|el[3456]\\d{2}dual|erk0|esl8|ex300|ez40|ez60|ez70|ezos|ezze|elai|emul|eric|ezwa|fake|fly\\-|fly_|g\\-mo|g1 u|g560|gf\\-5|grun|gene|go.w|good|grad|hcit|hd\\-m|hd\\-p|hd\\-t|hei\\-|hp i|hpip|hs\\-c|htc |htc\\-|htca|htcg)",
      "Flags": "i",
      "DeviceReplacement": "Generic Feature Phone",
      "BrandReplacement": "Generic",
      "ModelReplacement": "Feature Phone",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "^(htcp|htcs|htct|htc_|haie|hita|huaw|hutc|i\\-20|i\\-go|i\\-ma|i\\-mobile|i230|iac|iac\\-|iac/|ig01|im1k|inno|iris|jata|kddi|kgt|kgt/|kpt |kwc\\-|klon|lexi|lg g|lg\\-a|lg\\-b|lg\\-c|lg\\-d|lg\\-f|lg\\-g|lg\\-k|lg\\-l|lg\\-m|lg\\-o|lg\\-p|lg\\-s|lg\\-t|lg\\-u|lg\\-w|lg/k|lg/l|lg/u|lg50|lg54|lge\\-|lge/|leno|m1\\-w|m3ga|m50/|maui|mc01|mc21|mcca|medi|meri|mio8|mioa|mo01|mo02|mode|modo|mot |mot\\-|mt50|mtp1|mtv |mate|maxo|merc|mits|mobi|motv|mozz|n100|n101|n102|n202|n203|n300|n302|n500|n502|n505|n700|n701|n710|nec\\-|nem\\-|newg|neon)",
      "Flags": "i",
      "DeviceReplacement": "Generic Feature Phone",
      "BrandReplacement": "Generic",
      "ModelReplacement": "Feature Phone",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "^(netf|noki|nzph|o2 x|o2\\-x|opwv|owg1|opti|oran|ot\\-s|p800|pand|pg\\-1|pg\\-2|pg\\-3|pg\\-6|pg\\-8|pg\\-c|pg13|phil|pn\\-2|pt\\-g|palm|pana|pire|pock|pose|psio|qa\\-a|qc\\-2|qc\\-3|qc\\-5|qc\\-7|qc07|qc12|qc21|qc32|qc60|qci\\-|qwap|qtek|r380|r600|raks|rim9|rove|s55/|sage|sams|sc01|sch\\-|scp\\-|sdk/|se47|sec\\-|sec0|sec1|semc|sgh\\-|shar|sie\\-|sk\\-0|sl45|slid|smb3|smt5|sp01|sph\\-|spv |spv\\-|sy01|samm|sany|sava|scoo|send|siem|smar|smit|soft|sony|t\\-mo|t218|t250|t600|t610|t618|tcl\\-|tdg\\-|telm|tim\\-|ts70|tsm\\-|tsm3|tsm5|tx\\-9|tagt)",
      "Flags": "i",
      "DeviceReplacement": "Generic Feature Phone",
      "BrandReplacement": "Generic",
      "ModelReplacement": "Feature Phone",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "^(talk|teli|topl|tosh|up.b|upg1|utst|v400|v750|veri|vk\\-v|vk40|vk50|vk52|vk53|vm40|vx98|virg|vertu|vite|voda|vulc|w3c |w3c\\-|wapj|wapp|wapu|wapm|wig |wapi|wapr|wapv|wapy|wapa|waps|wapt|winc|winw|wonu|x700|xda2|xdag|yas\\-|your|zte\\-|zeto|aste|audi|avan|blaz|brew|brvw|bumb|ccwa|cell|cldc|cmd\\-|dang|eml2|fetc|hipt|http|ibro|idea|ikom|ipaq|jbro|jemu|jigs|keji|kyoc|kyok|libw|m\\-cr|midp|mmef|moto|mwbp|mywa|newt|nok6|o2im|pant|pdxg|play|pluc|port|prox|rozo|sama|seri|smal|symb|treo|upsi|vx52|vx53|vx60|vx61|vx70|vx80|vx81|vx83|vx85|wap\\-|webc|whit|wmlb|xda\\-|xda_)",
      "Flags": "i",
      "DeviceReplacement": "Generic Feature Phone",
      "BrandReplacement": "Generic",
      "ModelReplacement": "Feature Phone",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "^(Ice)$",
      "Flags": "",
      "DeviceReplacement": "Generic Feature Phone",
      "BrandReplacement": "Generic",
      "ModelReplacement": "Feature Phone",
      "MatchesCount": 0
    },
    {
      "Reg": {},
      "Expr": "(wap[\\-\\ ]browser|maui|netfront|obigo|teleca|up\\.browser|midp|Opera Mini)",
      "Flags": "i",
      "DeviceReplacement": "Generic Feature Phone",
      "BrandReplacement": "Generic",
      "ModelReplacement": "Feature Phone",
      "MatchesCount": 0
    }
  ]
}